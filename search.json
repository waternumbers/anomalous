[{"path":"https://waternumbers.github.io/anomalous/articles/anomalous.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Using anomalous","text":"package contains native R implementations PELT CAPA algorithms changepoint anomaly detection. slower optimised implementations found changepoint anomaly packages repectively results use package identical; code structure designed make easier develop new cost functions. Currently package support full range multivariate series partioning changepoint anomaly packages. implementation package build around S3 class anomalous_partition storing information partitiaioning data R6 classes cost functions relating fitting different distributions data. CAPA PELT implementations make use methods anomalous_partition class. allows replacement current anomalous_partition class new class similarly names methods. structure creation R6 classes cost functions outlined seperate vignette demonstrate us o package used data shown Fig. 4 <Lai et al.¬†(2005)> compare different methods segmenting array comparative genomic hy- bridization (aCGH) data Glioblastoma multiforme (GBM), type brain tumor. arrays developed identify DNA copy number alteration corresponding chromosomal aberrations. High-throughput aCGH data intensity ratios diseased vs.¬†control samples indexed location genome. Values greater 1 indicate diseased samples additional chromosomes values less 1 indicate fewer chromosomes. Detection aberrations can aid future screening treatments diseases. data included package can loaded ","code":"library(anomalous) data(\"Lai2005fig4\") y <- Lai2005fig4[, 5]"},{"path":"https://waternumbers.github.io/anomalous/articles/anomalous.html","id":"using-capa-for-anomalies","dir":"Articles","previous_headings":"","what":"Using CAPA for anomalies","title":"Using anomalous","text":"Start considering detection abberations anomaly problem. Following analysis presented  model data using Normal distribution piecewise constant mean fitted likelihood based cost function. Assuming mean, without abberations 0, robustly estimate standard deviation set cost match penalites introduction collective point anomalies defaults anomaly package record partions created using CAPA algorithm can run Calling summary method output shows partitions found  detected. results can plotted data using","code":"fCost <- gaussMean$new(y,m=0,s=median(abs(y))) p <- partition(beta = 4*log(length(y)), ## collective anomaly penalty                betaP = 3*log(length(y)), ## point anomaly penalty                min_length = 2 ## minimuum length of a collective anomaly                ) res <- capa(p,fCost) summary(res) #>    start end       type        cost #> 1      1  25 background 31.88392656 #> 2     26  49 collective 78.65204722 #> 3     50  53 background  0.22817547 #> 4     54  54      point 20.62940200 #> 5     55  81 background 40.73680860 #> 6     82  85 collective 26.75901708 #> 7     86  89 background  6.63046985 #> 8     90  96 collective 36.79436850 #> 9     97 123 background 52.30610102 #> 10   124 124      point 21.67351730 #> 11   125 125      point 19.84613012 #> 12   126 133 collective 41.31343158 #> 13   134 147 background 16.51098244 #> 14   148 187 collective 61.73802014 #> 15   188 193 background -0.05576323 plot(res,yy=y)"},{"path":"https://waternumbers.github.io/anomalous/articles/anomalous.html","id":"using-pelt-for-change-points","dir":"Articles","previous_headings":"","what":"Using PELT for change points","title":"Using anomalous","text":"section repeats Glioblastoma case study  allow comparision usage package  package impliments PELT C smaller number cost functions. cost function set exactly way CAPA analyis. penalty penalisation introduction new segment based BIC. anomalous_partion can created using penalty Note partition veiws changepoint segments series collective anomalies, need specify point anomaly penalty. Computing partitioning plotting outcome  shows idientical results <>.","code":"p <- partition(beta = 2*log(length(y)), betaP = NA, min_length=2) res <- pelt(p,fCost) plot(res,yy=y)"},{"path":"https://waternumbers.github.io/anomalous/articles/anomalous.html","id":"crops-for-varaible-penalties","dir":"Articles","previous_headings":"","what":"CROPS for varaible penalties","title":"Using anomalous","text":"<> build upon PELT provide efficent algorithm searhcing penalty term changepoint problem determine, range penalties, possible changepoint locations. algorithm also suitable use CAPA long point anomaly penalty fixed. Building upon changepoint analysis can consider identification anomaly problem. Since expected value 0 mean can look changes around specifying mean variance background distribution analysis single set penalties proceed instead let us consider using crops study range penalties output contains anomalous_partition classes different numbers collective anomalies can plotted usual way.","code":"fCost <- gaussMean$new(y, m = 0,s = median(abs(y)), point_type=\"mean\") p <- crops(log(length(y)), 6*log(length(y)), fCost, alg=capa, betaP = 2*log(length(y)), min_length=2) plot(p$outRec[[\"4\"]],yy=y,main=\"Three collective anomalies\") plot(p$outRec[[\"5\"]],yy=y,main=\"Five collective anomalies\")"},{"path":"https://waternumbers.github.io/anomalous/articles/categorical.html","id":"no-anomaly-baseline","dir":"Articles","previous_headings":"","what":"No Anomaly (Baseline)","title":"Categorical Cost Calculations","text":"data generating distribution gives t‚ààTkt \\T_{k} P(yt|p)=‚àè=1Npiyt,P\\left(y_t \\left| p \\right.\\right) =  \\prod\\limits_{=1}^{N} p_{}^{y_{t,}} yt,=1y_{t,}=1 ttth sample iith class zero otherwise. convience let nkn_{k} samples TkT_{k} nk,in_{k,} class ii. cost computed twice negative log likelhiood penalty term giving CB(yt‚ààTk|p)=‚àí2‚àët‚ààTk‚àë=1Nyt,ilog(pi)=‚àí2‚àë=1Nnk,ilog(pi) C_{B}\\left(y_{t \\T_{k}} \\left| p \\right.\\right) =  -2 \\sum\\limits_{t \\T_{k}}  \\sum\\limits_{=1}^{N} y_{t,} \\log\\left( p_{} \\right) =-2 \\sum\\limits_{=1}^{N} n_{k,} \\log\\left( p_{} \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/categorical.html","id":"anomaly","dir":"Articles","previous_headings":"","what":"Anomaly","title":"Categorical Cost Calculations","text":"case anomaly cost computed CA(yt‚ààTk|Œªk)=Œ≤‚àí2‚àët‚ààTk‚àë=1Nyt,ilog(ŒªÃÇk,)=Œ≤‚àí2‚àë=1Nnk,ilog(ŒªÃÇk,) C_{}\\left(y_{t \\T_{k}} \\left| \\lambda_{k} \\right.\\right) =  \\beta - 2 \\sum\\limits_{t \\T_{k}}  \\sum\\limits_{=1}^{N} y_{t,} \\log\\left( \\hat{\\lambda}_{k,} \\right) = \\beta - 2 \\sum\\limits_{=1}^{N} n_{k,} \\log\\left( \\hat{\\lambda}_{k,} \\right) ŒªÃÇk,j=‚àët‚ààTkyt,j‚àë=1N‚àët‚ààTkyt,=nk,jnk \\hat{\\lambda}_{k,j} = \\frac{ \\sum\\limits_{t \\T_{k}} y_{t,j} } { \\sum\\limits_{=1}^{N} \\sum\\limits_{t \\T_{k}} y_{t,} } = \\frac{n_{k,j}}{n_{k}} anomalous region created CA(yt‚ààTk|Œªk)‚àíCB(yt‚ààTk|p)=Œ≤‚àí2‚àë=1Nnk,(log(nk,)‚àílog(nkpi))<0 C_{}\\left(y_{t \\T_{k}} \\left| \\lambda_{k} \\right.\\right) - C_{B}\\left(y_{t \\T_{k}} \\left| p \\right.\\right) =  \\beta - 2  \\sum\\limits_{=1}^{N} n_{k,} \\left( \\log\\left( n_{k,} \\right) - \\log\\left( n_{k} p_{} \\right) \\right) <0 case poitn anomaly nk=nk,j=1n_{k}=n_{k,j}=1 giving CA(yt‚ààTk|Œªk)‚àíCB(yt‚ààTk|p)=Œ≤+2log(pj) C_{}\\left(y_{t \\T_{k}} \\left| \\lambda_{k} \\right.\\right) - C_{B}\\left(y_{t \\T_{k}} \\left| p \\right.\\right) =  \\beta + 2 \\log\\left( p_{j} \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/crops.html","id":"framework","dir":"Articles","previous_headings":"","what":"Framework","title":"CROPS with anomalies","text":"Let observed data ùê≤1:T=(y1,‚Ä¶,yT)\\mathbf{y}_{1:T} = \\left(y_{1},\\ldots,y_{T}\\right) indexed time come parametric model time parameter vectors Œ∏t\\theta_{t} whose density given P(yt|Œ∏t)P\\left(y_{t} \\left| \\theta_{t} \\right.\\right). parameters Œ∏t\\theta_{t} may time varying invariant. Anomalies modelled parametric epidemic changepoints, represented changes parameters Œ∏t\\theta_{t} common across timesteps anomaly. iith anomalous period consists nin_{} consecuative time steps denoted set T[]T^\\left[\\right]. KK anomalous periods disjoint ‚ãÇ=1KT[]=‚àÖ\\bigcap\\limits_{=1}^{K} T^{\\left[\\right]} = \\emptyset ordered maxt‚ààT[]t<mint‚ààT[j]t\\max\\limits_{t \\T^{\\left[\\right]}} t < \\min\\limits_{t \\T^{\\left[j\\right]}} t <ji<j. variations parameters caused anomalous periods given Œ∏t={Œ∏t[1]t‚ààT[1]‚ãÆŒ∏t[K]t‚ààT[K]Œ∏t[0]otherwise \\theta_{t} = \\left\\{ \\begin{array}{ll} \\theta_{t}^{\\left[1\\right]} & t \\T^{\\left[1\\right]} \\\\ & \\vdots \\\\ \\theta_{t}^{\\left[K\\right]} & t \\T^{\\left[K\\right]} \\\\ \\theta_{t}^{\\left[0\\right]} & \\mathrm{otherwise} \\end{array} \\right.  density values Œ∏t[0]\\theta_{t}^{\\left[0\\right]} determine non anomalous behaviour process generating observed data. considered known priori anomalous periods can determined selection K,T[1],‚Ä¶,T[K]K, T^{\\left[1\\right]},\\ldots,T^{\\left[K\\right]} minimise penalised cost ‚àët‚àâ‚à™T[]ùíû(yt,Œ∏t[0])+‚àë=1,‚Ä¶,K{minŒ∏t[](‚àët‚ààT[]ùíû(yt,Œ∏t[]))+Œ≤} \\sum\\limits_{t\\notin\\cup T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[0\\right]}\\right) + \\sum\\limits_{=1,\\ldots,K}\\left\\{ \\min_{\\theta_{t}^{\\left[\\right]}}\\left(  \\sum\\limits_{t \\T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[\\right]}\\right) \\right) + \\beta \\right\\} subject ni>ln_{} > l. minimum anomaly length ll related anoamly cost function ùíû(yt,Œ∏t)\\mathcal{C}\\left(y_{t},\\theta_{t}\\right) ensures minimum respect Œ∏t[]\\theta_{t}^{\\left[\\right]} can found. Concrete examples framework cost functions can found cost function vignettes. One possible definition  ùíû(yt,Œ∏t)\\mathcal{C}\\left(y_{t},\\theta_{t}\\right) negative log-likelihood data given parametric model. cases common choices penalty Œ≤\\beta based informationc criteria commonly used model selection . noted <> practical settings may criteria perform poorly. Instead, follwoing section CROPS algorithm, whch offers graphical selection method selecton penalty term changepoint analysis adapted use anomaly framework.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/crops.html","id":"crops","dir":"Articles","previous_headings":"Framework","what":"CROPS","title":"CROPS with anomalies","text":"Folowing  relate minimum value penalised cost function given Q(ùê≤1:T,Œ≤)=minK,T[1],‚Ä¶,T[K](‚àët‚àâ‚à™T[]ùíû(yt,Œ∏t[0])+‚àë=1,‚Ä¶,K{minŒ∏t[](‚àët‚ààT[]ùíû(yt,Œ∏t[]))+Œ≤}) Q\\left(\\mathbf{y}_{1:T},\\beta\\right) = \\min\\limits_{K, T^{\\left[1\\right]},\\ldots,T^{\\left[K\\right]}} \\left(\\sum\\limits_{t\\notin\\cup T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[0\\right]}\\right) + \\sum\\limits_{=1,\\ldots,K}\\left\\{ \\min_{\\theta_{t}^{\\left[\\right]}}\\left(  \\sum\\limits_{t \\T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[\\right]}\\right) \\right) + \\beta \\right\\} \\right) minimum cost partition KK anomalies given QK(ùê≤1:T)=minT[1],‚Ä¶,T[K](‚àët‚àâ‚à™T[]ùíû(yt,Œ∏t[0])+‚àë=1,‚Ä¶,K{minŒ∏t[](‚àët‚ààT[]ùíû(yt,Œ∏t[]))}) Q_{K}\\left(\\mathbf{y}_{1:T}\\right) = \\min\\limits_{T^{\\left[1\\right]},\\ldots,T^{\\left[K\\right]}} \\left(\\sum\\limits_{t\\notin\\cup T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[0\\right]}\\right) + \\sum\\limits_{=1,\\ldots,K}\\left\\{ \\min_{\\theta_{t}^{\\left[\\right]}}\\left(  \\sum\\limits_{t \\T^{\\left[\\right]}} \\mathcal{C}\\left(y_{t},\\theta_{t}^{\\left[\\right]}\\right) \\right) \\right\\} \\right) Q(ùê≤1:T,Œ≤)=minK(QK(ùê≤1:T)+KŒ≤) Q\\left(\\mathbf{y}_{1:T},\\beta\\right) = \\min\\limits_{K} \\left( Q_{K}\\left(\\mathbf{y}_{1:T}\\right) + K\\beta \\right) exactly form CROPS paper theorom 3.1 algorithm still apply","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/crops.html","id":"point-anomalies","dir":"Articles","previous_headings":"","what":"Point anomalies","title":"CROPS with anomalies","text":"Select penalty based number standard deviations away mean run CROPS collective anomaly. TODO - document correct","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"univariate-independent-gaussian","dir":"Articles > Old","previous_headings":"","what":"Univariate Independent Gaussian","title":"Cost Calculations","text":"Data belongs group kk whose time stamps set TkT_{k} can additive mean anomaly mkm_{k} multiplicative variance anomaly sks_{k} common t‚ààTkt \\T_{k}. t‚ààTkt \\T_{k} gives P(yt|Œºt,mk,œÉk,sk)=12œÄœÉtskexp(‚àí12œÉtsk(yt‚àíŒºt‚àímk)2) P\\left(y_t \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) = \\frac{1}{\\sqrt{2\\pi\\sigma_{t}s_{k}}}\\exp\\left(-\\frac{1}{2\\sigma_{t}s_{k}}\\left(y_{t} - \\mu_t - m_{k}\\right)^2\\right) likelihood nkn_{k} observations yt‚ààTky_{t \\T_{k}} L(yt‚ààTk|Œºt,mk,œÉk,sk)=(2œÄsk)‚àínk/2‚àèt‚ààTkœÉt‚àí1/2exp(‚àí12sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt) L\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\left(2\\pi s_{k}\\right)^{-n_{k}/2}  \\prod\\limits_{t \\T_{k}} \\sigma_{t}^{-1/2} \\exp\\left(-\\frac{1}{2s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}}\\right) log-likelihood yt‚ààTky_{t \\T_{k}} l(yt‚ààTk|Œºt,mk,œÉk,sk)=‚àínk2log(2œÄsk)‚àí12‚àët‚ààTklog(œÉt)‚àí12sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt l\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  -\\frac{n_{k}}{2} \\log\\left(2\\pi s_{k}\\right) -\\frac{1}{2}\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) -\\frac{1}{2s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} cost twice negative log likelihood plus penalty Œ≤\\beta giving C(yt‚ààTk|Œºt,mk,œÉk,sk)=nklog(2œÄsk)+‚àët‚ààTklog(œÉt)+1sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt+Œ≤ C\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  n_{k} \\log\\left(2\\pi s_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\frac{1}{s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"anomaly-in-mean-and-varinace","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in mean and varinace","title":"Cost Calculations","text":"Estimates mÃÇ\\hat{m} mm œÉÃÇ\\hat{\\sigma} œÉ\\sigma can selected minimise cost taking mÃÇk=(‚àët‚ààTkyt‚àíŒºtœÉt)(‚àët‚ààTk1œÉt)‚àí1 \\hat{m}_{k} = \\left( \\sum\\limits_{t \\T_k} \\frac{y_t-\\mu_t}{\\sigma_t} \\right)\\left(  \\sum\\limits_{t \\T_k} \\frac{1}{\\sigma_t}\\right)^{-1}  sÃÇk=1nk‚àët‚ààTk(yt‚àíŒºt‚àímÃÇk)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t - \\hat{m}_{k}\\right)^2}{\\sigma_t} Subsituting cost gives CMV(yt‚ààTk|Œºt,mÃÇk,œÉk,sÃÇk)=nklog(2œÄsÃÇk)+‚àët‚ààTklog(œÉt)+nk+Œ≤ C_{MV}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k,\\hat{s}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{s}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"anomaly-in-mean","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in Mean","title":"Cost Calculations","text":"change variance sk=1s_{k}=1. Estimate mÃÇk\\hat{m}_{k} unchanged anomaly mean variance cost CM(yt‚ààTk|Œºt,mÃÇk,œÉk)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt‚àímÃÇk)2œÉt+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t - \\hat{m}_{k}\\right)^2}{\\sigma_t} + \\beta can written CM(yt‚ààTk|Œºt,mÃÇk,œÉk)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt)2œÉt‚àímÃÇ2‚àët‚ààTk1œÉt+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t} -\\hat{m}^{2} \\sum\\limits_{t \\T_k} \\frac{ 1}{\\sigma_t} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"anomaly-in-variance","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in Variance","title":"Cost Calculations","text":"mean anomaly mk=0m_{k}=0. Estimate sÃÇk\\hat{s}_{k} therfore changes sÃÇk=1nk‚àët‚ààTk(yt‚àíŒºt)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t}  cost CV(yt‚ààTk|Œºt,œÉk,sÃÇk)=nklog(2œÄsÃÇk)+‚àët‚ààTklog(œÉt)+nk+Œ≤ C_{V}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\sigma_k,\\hat{s}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{s}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"no-anomaly-baseline","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"No Anomaly (Baseline)","title":"Cost Calculations","text":"mk=0m_{k}=0 sk=1s_{k}=1 penalty CB(yt‚ààTk|Œºt,œÉt)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt)2œÉt C_{B}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\sigma_t\\right.\\right) =  n_{k} \\log\\left(2\\pi \\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t\\right)^2}{\\sigma_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"point-anomaly","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Point anomaly","title":"Cost Calculations","text":"point anomaly time tt treated sinle time step variance anomaly. Naively cost computed using formulea variance anomaly Cp(yt|Œºt,œÉt)=log(2œÄ(yt‚àíŒºt)2œÉt)+log(œÉt)+1+Œ≤=log(2œÄ)+log((yt‚àíŒºt)2)+1+Œ≤ C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) = \\log\\left(2\\pi \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t}\\right) + \\log\\left(\\sigma_{t}\\right) + 1 + \\beta = \\log\\left(2\\pi\\right) + \\log \\left( \\left(y_t-\\mu_t\\right)^2 \\right) + 1 + \\beta However cost point anomaly higher background cost yty_{t} , sense, close background. Follow Fisch et al.¬†intorducing term Œ≥\\gamma control . Using standardised variable zt=yt‚àíŒºtœÉtz_{t} = \\frac{y_t-\\mu_t}{\\sqrt{\\sigma_{t}}} modified cost point anomaly expressed Cp(yt|Œºt,œÉt)=log(2œÄ)+log(œÉt)+log(Œ≥+zt2)+1+Œ≤ C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) =  \\log\\left(2\\pi\\right) + \\log\\left(\\sigma_{t}\\right) + \\log \\left( \\gamma + z_{t}^{2} \\right) + 1 + \\beta Relating background cost see point anomalies may accepted capa search f(zt2,Œ≥,Œ≤)=Cp(yt|Œºt,œÉt)‚àíCB(yt|Œºt,œÉt)=log(Œ≥+zt2)+1+Œ≤‚àízt2<0 f\\left(z_{t}^2,\\gamma,\\beta\\right) = C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) - C_{B}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) = \\log \\left( \\gamma + z_{t}^{2} \\right) + 1 + \\beta - z_{t}^{2} < 0 implies Œ≥\\gamma selected f(0,Œ≥,Œ≤)‚â•0f\\left(0,\\gamma,\\beta\\right) \\geq 0 gradient wrt zt2z_{t}^2 ‚àÇ‚àÇzt2f(zt2,Œ≥,Œ≤)=1Œ≥+zt2‚àí1 \\frac{\\partial}{\\partial z_{t}^2} f\\left(z_{t}^2,\\gamma,\\beta\\right) = \\frac{1}{\\gamma + z_{t}^{2}} - 1 Requiring Œ≥<1\\gamma < 1; maintains positive gradient small z_{t}^2; indicates anomalies near 0. Consider three different definitions Œ≥\\gamma. non corection Œ≥0=0\\gamma_{0} = 0 allows point anomalies z_{t}^2 approaches 0 correction Œ≥1=exp(‚àíŒ≤)\\gamma_{1} = \\exp\\left(-\\beta\\right) proposed Fisch et al. minimal correction Œ≥2=exp(‚àí(1+Œ≤))\\gamma_{2} = \\exp\\left(-\\left(1+\\beta\\right)\\right) f(0,Œ≥2,Œ≤)=0f\\left(0,\\gamma_{2},\\beta\\right) = 0. see impact correct small zz following figure shows f(zt2,Œ≥,Œ≤)f\\left(z_{t}^2,\\gamma,\\beta\\right) Œ≤=10\\beta=10 three options.  clear difference become small zz increases. supported plot shows value ztz_{t} point anomaly might occur Œ≤\\beta varies. Area line potential anomaly values.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"poisson","dir":"Articles > Old","previous_headings":"","what":"Poisson","title":"Cost Calculations","text":"Data belongs group kk whose time stamps set TkT_{k} can multiplicative rate anomaly rkr_{k} common t‚ààTkt \\T_{k}. t‚ààTkt \\T_{k} gives P(yt|Œªt,rk)=Œªtytrkytexp(‚àírkŒªt)yt! P\\left(y_t \\left| \\lambda_t,r_k\\right.\\right) =  \\frac{\\lambda_{t}^{y_{t}} r_{k}^{y_{t}} \\exp\\left(-r_{k}\\lambda_{t}\\right)}{y_{t}!} likelihood nkn_{k} observations yt‚ààTky_{t \\T_{k}} L(yt‚ààTk|Œªt,rk)=rk‚àët‚ààTkytexp(‚àírk‚àët‚ààTkŒªt)‚àèt‚ààTkŒªtytyt! L\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  r_{k}^{\\sum\\limits_{t \\T_{k}} y_{t}}  \\exp\\left(-r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t}\\right) \\prod\\limits_{t \\T_{k}} \\frac{ \\lambda_{t}^{y_{t}} }{ y_{t}!} log-likelihood yt‚ààTky_{t \\T_{k}} l(yt‚ààTk|Œªt,rk)=‚àët‚ààTkytlog(rk)‚àírk‚àët‚ààTkŒªt+‚àët‚ààTkytlog(Œªt)‚àí‚àët‚ààTklog(yt!) l\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{k}\\right) - r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t} + \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) - \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right) cost twice negative log likelihood plus penalty Œ≤\\beta giving C(yt‚ààTk|Œªt,rk)=2rk‚àët‚ààTkŒªt‚àí2‚àët‚ààTkytlog(rk)‚àí2‚àët‚ààTkytlog(Œªt)+2‚àët‚ààTklog(yt!)+Œ≤ C\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  2 r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{k}\\right) - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right) +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"anomaly-in-rate","dir":"Articles > Old","previous_headings":"Poisson","what":"Anomaly in rate","title":"Cost Calculations","text":"Estimates rÃÇk\\hat{r}_{k} rkr_{k} can selected minimise cost taking rÃÇk=‚àët‚ààTkyt‚àët‚ààTkŒªt \\hat{r}_{k} = \\frac{ \\sum\\limits_{t \\T_{k}} y_{t} }{\\sum\\limits_{t \\T_{k}} \\lambda_{t}} gives cost C(yt‚ààTk|Œªt,rk)=2‚àët‚ààTkyt‚àí2‚àët‚ààTkytlog(rÃÇk)‚àí2‚àët‚ààTkytlog(Œªt)+2‚àët‚ààTklog(yt!)+Œ≤ C\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} y_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\hat{r}_{k}\\right) - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right) + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"no-anomaly-baseline-1","dir":"Articles > Old","previous_headings":"Poisson","what":"No Anomaly (Baseline)","title":"Cost Calculations","text":"rk=1r_{k}=1 penalty CB(yt‚ààTk|Œªt,rk)=2‚àët‚ààTkŒªt‚àí2‚àët‚ààTkytlog(Œªt)+2‚àët‚ààTklog(yt!) C_{B}\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} \\lambda_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"point-anomaly-1","dir":"Articles > Old","previous_headings":"Poisson","what":"Point anomaly","title":"Cost Calculations","text":"point anomaly time tt treated single time step rate anomaly. Naively cost computed using formulea rate anomaly rÃÇk=yt/Œªt\\hat{r}_{k} = y_{t}/\\lambda_{t} giving CP(yt|Œªt,rk)=2yt‚àí2ytlog(yk)+2log(yt!)+Œ≤ C_{P}\\left(y_{t} \\left| \\lambda_t,r_k\\right.\\right) =  2 y_{t} - 2 y_{t} \\log\\left(y_{k}\\right) + 2 \\log\\left( y_{t}! \\right) + \\beta However cost point anomaly higher background cost rkr_{k} , sense, close background value 1. Comparing baseline cost single point shows point anomaly exist 2yt‚àí2ytlog(yk)+2log(yt!)+Œ≤<2Œªt‚àí2ytlog(Œªt)+2log(yt!) 2 y_{t} - 2 y_{t} \\log\\left(y_{k}\\right) + 2 \\log\\left( y_{t}! \\right) + \\beta < 2 \\lambda_{t} - 2 y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\log\\left( y_{t}! \\right) Rearrangement gives $$\\begin{equation} \\beta < 2 \\left( \\lambda_{t} - y_{t} \\right) + 2 y_{t} \\left( \\log\\left(y_{t}\\right) - \\log\\left(\\lambda_{t}\\right) \\right) \\\\ < 2 \\lambda_{t} \\left( 1 - r_{k} \\right) + 2 y_{t} \\log\\left(r_{k}\\right) \\\\ < 2 \\lambda_{t} \\left( 1 - r_{k} + r_{k}  \\log\\left(r_{k}\\right) \\right) \\end{equation}$$ follwoing plot shows selection Œ≤\\beta can selected multiple Œª\\lambda avoid rr close 1.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"multivariate-gaussian","dir":"Articles > Old","previous_headings":"","what":"Multivariate Gaussian","title":"Cost Calculations","text":"vector data ùê≤\\mathbf{y} length pp follows multivariate Gaussian mean ùõç\\mathbf{\\mu} precision ùö≤\\mathbf{\\Lambda}.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"background","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Background","title":"Cost Calculations","text":"Without anomalous periods log liklihood given l(ùê≤|ùõç,ùö≤)=‚àíp2log(2œÄ)‚àí12log|ùö≤‚àí1|‚àí12(ùê≤‚àíùõç)Tùö≤(ùê≤‚àíùõç) l\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Lambda} \\right. \\right) = -\\frac{p}{2}\\log\\left(2\\pi\\right) - \\frac{1}{2}\\log\\left|\\mathbf{\\Lambda}^{-1}\\right|  - \\frac{1}{2} \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)^{T} \\mathbf{\\Lambda}  \\left(\\mathbf{y}-\\mathbf{\\mu}\\right) cost C(ùê≤|ùõç,ùö∫)=plog(2œÄ)‚àílog|ùö≤|+(ùê≤‚àíùõç)Tùö≤(ùê≤‚àíùõç) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma} \\right. \\right) = p\\log\\left(2\\pi\\right) - \\log\\left|\\mathbf{\\Lambda}\\right|  + \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)^{T} \\mathbf{\\Lambda}  \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"modelling-anomalies","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Modelling anomalies","title":"Cost Calculations","text":"Consider iith KK anomalies occurs consecuative time steps starting time s[]s^\\left[\\right] finished e[]e^\\left[\\right]. Anomalies overlap e[]<s[j]e^\\left[\\right] < s^\\left[j\\right] 0<<j<K0<<j<K model change variance let Œ©\\Omega p√ópp \\times p diagonal matrix Œ©t,t=œâ[]\\Omega_{t,t} = \\omega^{\\left[\\right]} exists ii s[]‚â§t‚â§e[]s^\\left[\\right] \\leq t \\leq e^\\left[\\right] 1 otherwise. Let Œ¥\\delta length KK vector mean changes ùêó\\mathbf{X} p√óKp \\times K matrix ùêót,=1\\mathbf{X}_{t,}=1 s[]‚â§t‚â§e[]s^\\left[\\right] \\leq t \\leq e^\\left[\\right] zero otherwise. Decomposing Œõ\\Lambda ùö≤=ùêîTùêî\\mathbf{\\Lambda} = \\mathbf{U}^{T}\\mathbf{U} costs including anomalies becomes C(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=plog(2œÄ)‚àílog|ùêîTŒ©ùêî|+(ùê≤‚àíùõç‚àíùêóŒ¥)TùêîTŒ©ùêî(ùê≤‚àíùõç‚àíùêóŒ¥) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = p\\log\\left(2\\pi\\right)  - \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right|  + \\left(\\mathbf{y}-\\mathbf{\\mu}-\\mathbf{X}\\delta\\right)^{T} \\mathbf{U}^{T}\\Omega\\mathbf{U}  \\left(\\mathbf{y}-\\mathbf{\\mu}-\\mathbf{X}\\delta\\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/cost_calcs.html","id":"solving-for-omega-and-delta","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Solving for œâ\\omega and Œ¥\\delta","title":"Cost Calculations","text":"Let ùêù=ùêî(ùê≤=Œº)\\mathbf{d} = \\mathbf{U}\\left(\\mathbf{y}=\\mu\\right) ùêÉ=ùêîùêó\\mathbf{D} = \\mathbf{U} \\mathbf{X}. Using cost C(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=plog(2œÄ)‚àílog|ùêîTŒ©ùêî|+(ùêù‚àíùêÉŒ¥)TŒ©(ùêù‚àíùêÉŒ¥) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = p\\log\\left(2\\pi\\right)  - \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right|  + \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right)^{T} \\Omega  \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right) Since Œ©\\Omega diagonal (ùêù‚àíùêÉŒ¥)TŒ©(ùêù‚àíùêÉŒ¥)=‚àët=1:pŒ©t,t(ùêùt‚àíùêÉt,.Œ¥)2 \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right)^{T} \\Omega  \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right) =  \\sum\\limits_{t=1:p} \\Omega_{t,t}\\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2} non-anoalous time step t‚ààT‚Ä≤t \\T^{\\prime} see Œ©t,t=1\\Omega_{t,t}=1 ùêÉt,.=ùüé\\mathbf{D}_{t,.}=\\mathbf{0} allowing summation written ‚àët=1:pŒ©t,t(ùêùt‚àíùêÉt,.Œ¥)2=‚àët‚ààT‚Ä≤ùêùt2+‚àëk=1:Kœâk‚àët=s[k]:e[k](ùêùt‚àíùêÉt,.Œ¥)2 \\sum\\limits_{t=1:p} \\Omega_{t,t}\\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2}= \\sum\\limits_{t \\T^{\\prime}} \\mathbf{d}_{t}^{2} + \\sum\\limits_{k=1:K}  \\omega_{k} \\sum\\limits_{t=s^{\\left[k\\right]}:e^{\\left[k\\right]}} \\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2} Using identities determinants gives log|ùêîTŒ©ùêî|=log|ùêîTùêî|+log|Œ©| \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right| = \\log\\left| \\mathbf{U}^{T}\\mathbf{U} \\right| + \\log\\left| \\Omega \\right|  log|Œ©|=‚àëk=1:K(s[k]‚àíe[k]+1)logœâk \\log\\left| \\Omega \\right| = \\sum\\limits_{k=1:K}  \\left(s^{\\left[k\\right]}-e^{\\left[k\\right]}+1\\right) \\log \\omega_{k} Subsituation terms cost function gives ‚àÇ‚àÇœâkC(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=‚àí(s[k]‚àíe[k]+1)œâk+‚àët=s[k]:e[k](ùêùt‚àíùêÉt,.Œ¥)2 \\frac{\\partial}{\\partial \\omega_{k}} C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = - \\frac{\\left(s^{\\left[k\\right]}-e^{\\left[k\\right]}+1\\right)}{\\omega_{k}} + \\sum\\limits_{t=s^{\\left[k\\right]}:e^{\\left[k\\right]}} \\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"univariate-independent-gaussian","dir":"Articles > Old","previous_headings":"","what":"Univariate Independent Gaussian","title":"Univariate Cost Calculations","text":"Data belongs group kk whose time stamps set TkT_{k} can additive mean anomaly mkm_{k} multiplicative variance anomaly sks_{k} common t‚ààTkt \\T_{k}. t‚ààTkt \\T_{k} gives P(yt|Œºt,mk,œÉk,sk)=12œÄœÉtskexp(‚àí12œÉtsk(yt‚àíŒºt‚àímk)2) P\\left(y_t \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) = \\frac{1}{\\sqrt{2\\pi\\sigma_{t}s_{k}}}\\exp\\left(-\\frac{1}{2\\sigma_{t}s_{k}}\\left(y_{t} - \\mu_t - m_{k}\\right)^2\\right) likelihood nkn_{k} observations yt‚ààTky_{t \\T_{k}} L(yt‚ààTk|Œºt,mk,œÉk,sk)=(2œÄsk)‚àínk/2‚àèt‚ààTkœÉt‚àí1/2exp(‚àí12sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt) L\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\left(2\\pi s_{k}\\right)^{-n_{k}/2}  \\prod\\limits_{t \\T_{k}} \\sigma_{t}^{-1/2} \\exp\\left(-\\frac{1}{2s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}}\\right) log-likelihood yt‚ààTky_{t \\T_{k}} l(yt‚ààTk|Œºt,mk,œÉk,sk)=‚àínk2log(2œÄsk)‚àí12‚àët‚ààTklog(œÉt)‚àí12sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt l\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  -\\frac{n_{k}}{2} \\log\\left(2\\pi s_{k}\\right) -\\frac{1}{2}\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) -\\frac{1}{2s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} cost twice negative log likelihood plus penalty Œ≤\\beta giving C(yt‚ààTk|Œºt,mk,œÉk,sk)=nklog(2œÄsk)+‚àët‚ààTklog(œÉt)+1sk‚àët‚ààTk(yt‚àíŒºt‚àímk)2œÉt+Œ≤ C\\left(y_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  n_{k} \\log\\left(2\\pi s_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\frac{1}{s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"anomaly-in-mean-and-varinace","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in mean and varinace","title":"Univariate Cost Calculations","text":"Estimates mÃÇ\\hat{m} mm œÉÃÇ\\hat{\\sigma} œÉ\\sigma can selected minimise cost taking mÃÇk=(‚àët‚ààTkyt‚àíŒºtœÉt)(‚àët‚ààTk1œÉt)‚àí1 \\hat{m}_{k} = \\left( \\sum\\limits_{t \\T_k} \\frac{y_t-\\mu_t}{\\sigma_t} \\right)\\left(  \\sum\\limits_{t \\T_k} \\frac{1}{\\sigma_t}\\right)^{-1}  sÃÇk=1nk‚àët‚ààTk(yt‚àíŒºt‚àímÃÇk)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t - \\hat{m}_{k}\\right)^2}{\\sigma_t} Subsituting cost gives CMV(yt‚ààTk|Œºt,mÃÇk,œÉk,sÃÇk)=nklog(2œÄsÃÇk)+‚àët‚ààTklog(œÉt)+nk+Œ≤ C_{MV}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k,\\hat{s}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{s}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"anomaly-in-mean","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in Mean","title":"Univariate Cost Calculations","text":"change variance sk=1s_{k}=1. Estimate mÃÇk\\hat{m}_{k} unchanged anomaly mean variance cost CM(yt‚ààTk|Œºt,mÃÇk,œÉk)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt‚àímÃÇk)2œÉt+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t - \\hat{m}_{k}\\right)^2}{\\sigma_t} + \\beta can written CM(yt‚ààTk|Œºt,mÃÇk,œÉk)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt)2œÉt‚àímÃÇ2‚àët‚ààTk1œÉt+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\hat{m}_k,\\sigma_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t} -\\hat{m}^{2} \\sum\\limits_{t \\T_k} \\frac{ 1}{\\sigma_t} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"anomaly-in-variance","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Anomaly in Variance","title":"Univariate Cost Calculations","text":"mean anomaly mk=0m_{k}=0. Estimate sÃÇk\\hat{s}_{k} therfore changes sÃÇk=1nk‚àët‚ààTk(yt‚àíŒºt)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t}  cost CV(yt‚ààTk|Œºt,œÉk,sÃÇk)=nklog(2œÄsÃÇk)+‚àët‚ààTklog(œÉt)+nk+Œ≤ C_{V}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\sigma_k,\\hat{s}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{s}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"no-anomaly-baseline","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"No Anomaly (Baseline)","title":"Univariate Cost Calculations","text":"mk=0m_{k}=0 sk=1s_{k}=1 penalty CB(yt‚ààTk|Œºt,œÉt)=nklog(2œÄ)+‚àët‚ààTklog(œÉt)+‚àët‚ààTk(yt‚àíŒºt)2œÉt C_{B}\\left(y_{t \\T_{k}} \\left| \\mu_t,\\sigma_t\\right.\\right) =  n_{k} \\log\\left(2\\pi \\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(\\sigma_{t}\\right) +\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - \\mu_t\\right)^2}{\\sigma_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"point-anomaly","dir":"Articles > Old","previous_headings":"Univariate Independent Gaussian","what":"Point anomaly","title":"Univariate Cost Calculations","text":"point anomaly time tt treated sinle time step variance anomaly. Naively cost computed using formulea variance anomaly Cp(yt|Œºt,œÉt)=log(2œÄ(yt‚àíŒºt)2œÉt)+log(œÉt)+1+Œ≤=log(2œÄ)+log((yt‚àíŒºt)2)+1+Œ≤ C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) = \\log\\left(2\\pi \\frac{ \\left(y_t-\\mu_t\\right)^2}{\\sigma_t}\\right) + \\log\\left(\\sigma_{t}\\right) + 1 + \\beta = \\log\\left(2\\pi\\right) + \\log \\left( \\left(y_t-\\mu_t\\right)^2 \\right) + 1 + \\beta However cost point anomaly higher background cost yty_{t} , sense, close background. Follow Fisch et al.¬†intorducing term Œ≥\\gamma control . Using standardised variable zt=yt‚àíŒºtœÉtz_{t} = \\frac{y_t-\\mu_t}{\\sqrt{\\sigma_{t}}} modified cost point anomaly expressed Cp(yt|Œºt,œÉt)=log(2œÄ)+log(œÉt)+log(Œ≥+zt2)+1+Œ≤ C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) =  \\log\\left(2\\pi\\right) + \\log\\left(\\sigma_{t}\\right) + \\log \\left( \\gamma + z_{t}^{2} \\right) + 1 + \\beta Relating background cost see point anomalies may accepted capa search f(zt2,Œ≥,Œ≤)=Cp(yt|Œºt,œÉt)‚àíCB(yt|Œºt,œÉt)=log(Œ≥+zt2)+1+Œ≤‚àízt2<0 f\\left(z_{t}^2,\\gamma,\\beta\\right) = C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) - C_{B}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) = \\log \\left( \\gamma + z_{t}^{2} \\right) + 1 + \\beta - z_{t}^{2} < 0 implies Œ≥\\gamma selected f(0,Œ≥,Œ≤)‚â•0f\\left(0,\\gamma,\\beta\\right) \\geq 0 gradient wrt zt2z_{t}^2 ‚àÇ‚àÇzt2f(zt2,Œ≥,Œ≤)=1Œ≥+zt2‚àí1 \\frac{\\partial}{\\partial z_{t}^2} f\\left(z_{t}^2,\\gamma,\\beta\\right) = \\frac{1}{\\gamma + z_{t}^{2}} - 1 Requiring Œ≥<1\\gamma < 1; maintains positive gradient small z_{t}^2; indicates anomalies near 0. Consider three different definitions Œ≥\\gamma. non corection Œ≥0=0\\gamma_{0} = 0 allows point anomalies z_{t}^2 approaches 0 correction Œ≥1=exp(‚àíŒ≤)\\gamma_{1} = \\exp\\left(-\\beta\\right) proposed Fisch et al. minimal correction Œ≥2=exp(‚àí(1+Œ≤))\\gamma_{2} = \\exp\\left(-\\left(1+\\beta\\right)\\right) f(0,Œ≥2,Œ≤)=0f\\left(0,\\gamma_{2},\\beta\\right) = 0. see impact correct small zz following figure shows f(zt2,Œ≥,Œ≤)f\\left(z_{t}^2,\\gamma,\\beta\\right) Œ≤=10\\beta=10 three options.  clear difference become small zz increases. supported plot shows value ztz_{t} point anomaly might occur Œ≤\\beta varies. Area line potential anomaly values.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"poisson","dir":"Articles > Old","previous_headings":"","what":"Poisson","title":"Univariate Cost Calculations","text":"Data belongs group kk whose time stamps set TkT_{k} can multiplicative rate anomaly rkr_{k} common t‚ààTkt \\T_{k}. t‚ààTkt \\T_{k} gives P(yt|Œªt,rk)=Œªtytrkytexp(‚àírkŒªt)yt! P\\left(y_t \\left| \\lambda_t,r_k\\right.\\right) =  \\frac{\\lambda_{t}^{y_{t}} r_{k}^{y_{t}} \\exp\\left(-r_{k}\\lambda_{t}\\right)}{y_{t}!} likelihood nkn_{k} observations yt‚ààTky_{t \\T_{k}} L(yt‚ààTk|Œªt,rk)=rk‚àët‚ààTkytexp(‚àírk‚àët‚ààTkŒªt)‚àèt‚ààTkŒªtytyt! L\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  r_{k}^{\\sum\\limits_{t \\T_{k}} y_{t}}  \\exp\\left(-r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t}\\right) \\prod\\limits_{t \\T_{k}} \\frac{ \\lambda_{t}^{y_{t}} }{ y_{t}!} log-likelihood yt‚ààTky_{t \\T_{k}} l(yt‚ààTk|Œªt,rk)=‚àët‚ààTkytlog(rk)‚àírk‚àët‚ààTkŒªt+‚àët‚ààTkytlog(Œªt)‚àí‚àët‚ààTklog(yt!) l\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{k}\\right) - r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t} + \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) - \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right) cost twice negative log likelihood plus penalty Œ≤\\beta giving C(yt‚ààTk|Œªt,rk)=2rk‚àët‚ààTkŒªt‚àí2‚àët‚ààTkytlog(rk)‚àí2‚àët‚ààTkytlog(Œªt)+2‚àët‚ààTklog(yt!) C\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  2 r_{k} \\sum\\limits_{t \\T_{k}} \\lambda_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{k}\\right) - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"anomaly-in-rate","dir":"Articles > Old","previous_headings":"Poisson","what":"Anomaly in rate","title":"Univariate Cost Calculations","text":"Estimates rÃÇk\\hat{r}_{k} rkr_{k} can selected minimise cost taking rÃÇk=‚àët‚ààTkyt‚àët‚ààTkŒªt \\hat{r}_{k} = \\frac{ \\sum\\limits_{t \\T_{k}} y_{t} }{\\sum\\limits_{t \\T_{k}} \\lambda_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"no-anomaly-baseline-1","dir":"Articles > Old","previous_headings":"Poisson","what":"No Anomaly (Baseline)","title":"Univariate Cost Calculations","text":"rk=1r_{k}=1 penalty CB(yt‚ààTk|Œªt,rk)=2‚àët‚ààTkŒªt‚àí2‚àët‚ààTkytlog(Œªt)+2‚àët‚ààTklog(yt!) C_{B}\\left(y_{t \\T_{k}} \\left| \\lambda_t,r_k\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} \\lambda_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(\\lambda_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"point-anomaly---not-totaly-happy-with-this","dir":"Articles > Old","previous_headings":"Poisson","what":"Point anomaly - Not totaly happy with this","title":"Univariate Cost Calculations","text":"point anomaly time tt treated single time step rate anomaly. Naively cost computed using formulea rate anomaly rÃÇk=yt/Œªt\\hat{r}_{k} = y_{t}/\\lambda_{t} giving CP(yt|Œªt,rk)=2yt‚àí2ytlog(yk)+2log(yt!) C_{P}\\left(y_{t} \\left| \\lambda_t,r_k\\right.\\right) =  2 y_{t} - 2 y_{t} \\log\\left(y_{k}\\right) + 2 \\log\\left( y_{t}! \\right) However cost point anomaly higher background cost yty_{t} , sense, close background. acheive include hard threshold, , single timestep estimate rate anomaly rÃÇk=(1|yt/Œªt‚àí1|‚â§Œ≥yt/Œªt|yt/Œªt‚àí1|>Œ≥ \\hat{r}_{k} = \\left( \\begin{array}{cc} 1 & \\lvert y_{t}/\\lambda_{t} -1 \\rvert \\leq \\gamma \\\\ y_{t} / \\lambda_{t} & \\lvert y_{t}/\\lambda_{t} -1 \\rvert \\gt \\gamma \\\\ \\end{array} \\right.  estimate modified cost point anomaly includes positive constant Œ≥\\gamma expressed CP(yt|Œªt,rk)=Œ≥+2yt‚àí2ytlog(yk)+2log(yt!) C_{P}\\left(y_{t} \\left| \\lambda_t,r_k\\right.\\right) =  \\gamma + 2 y_{t} - 2 y_{t} \\log\\left(y_{k}\\right) + 2 \\log\\left( y_{t}! \\right) Consider three different definitions Œ≥\\gamma. non correction Œ≥0=0\\gamma_{0} = 0 allows point anomalies times expct yt=Œªty_{t} = \\lambda_{t} see impact correct small zz following figure shows CP(yt|Œªt,rk)‚àíCB(yt|Œªt,rk)C_{P}\\left(y_{t} \\left| \\lambda_t,r_k\\right.\\right) - C_{B}\\left(y_{t} \\left| \\lambda_t,r_k\\right.\\right) Œªt=5\\lambda_{t}=5 varying valus gamma.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"multivariate-gaussian","dir":"Articles > Old","previous_headings":"","what":"Multivariate Gaussian","title":"Univariate Cost Calculations","text":"vector data ùê≤\\mathbf{y} length pp follows multivariate Gaussian mean ùõç\\mathbf{\\mu} precision ùö≤\\mathbf{\\Lambda}.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"background","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Background","title":"Univariate Cost Calculations","text":"Without anomalous periods log liklihood given l(ùê≤|ùõç,ùö≤)=‚àíp2log(2œÄ)‚àí12log|ùö≤‚àí1|‚àí12(ùê≤‚àíùõç)Tùö≤(ùê≤‚àíùõç) l\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Lambda} \\right. \\right) = -\\frac{p}{2}\\log\\left(2\\pi\\right) - \\frac{1}{2}\\log\\left|\\mathbf{\\Lambda}^{-1}\\right|  - \\frac{1}{2} \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)^{T} \\mathbf{\\Lambda}  \\left(\\mathbf{y}-\\mathbf{\\mu}\\right) cost C(ùê≤|ùõç,ùö∫)=plog(2œÄ)‚àílog|ùö≤|+(ùê≤‚àíùõç)Tùö≤(ùê≤‚àíùõç) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma} \\right. \\right) = p\\log\\left(2\\pi\\right) - \\log\\left|\\mathbf{\\Lambda}\\right|  + \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)^{T} \\mathbf{\\Lambda}  \\left(\\mathbf{y}-\\mathbf{\\mu}\\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"modelling-anomalies","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Modelling anomalies","title":"Univariate Cost Calculations","text":"Consider iith KK anomalies occurs consecuative time steps starting time s[]s^\\left[\\right] finished e[]e^\\left[\\right]. Anomalies overlap e[]<s[j]e^\\left[\\right] < s^\\left[j\\right] 0<<j<K0<<j<K model change variance let Œ©\\Omega p√ópp \\times p diagonal matrix Œ©t,t=œâ[]\\Omega_{t,t} = \\omega^{\\left[\\right]} exists ii s[]‚â§t‚â§e[]s^\\left[\\right] \\leq t \\leq e^\\left[\\right] 1 otherwise. Let Œ¥\\delta length KK vector mean changes ùêó\\mathbf{X} p√óKp \\times K matrix ùêót,=1\\mathbf{X}_{t,}=1 s[]‚â§t‚â§e[]s^\\left[\\right] \\leq t \\leq e^\\left[\\right] zero otherwise. Decomposing Œõ\\Lambda ùö≤=ùêîTùêî\\mathbf{\\Lambda} = \\mathbf{U}^{T}\\mathbf{U} costs including anomalies becomes C(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=plog(2œÄ)‚àílog|ùêîTŒ©ùêî|+(ùê≤‚àíùõç‚àíùêóŒ¥)TùêîTŒ©ùêî(ùê≤‚àíùõç‚àíùêóŒ¥) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = p\\log\\left(2\\pi\\right)  - \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right|  + \\left(\\mathbf{y}-\\mathbf{\\mu}-\\mathbf{X}\\delta\\right)^{T} \\mathbf{U}^{T}\\Omega\\mathbf{U}  \\left(\\mathbf{y}-\\mathbf{\\mu}-\\mathbf{X}\\delta\\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/old/univariate_cost_calcs.html","id":"solving-for-omega-and-delta","dir":"Articles > Old","previous_headings":"Multivariate Gaussian","what":"Solving for œâ\\omega and Œ¥\\delta","title":"Univariate Cost Calculations","text":"Let ùêù=ùêî(ùê≤=Œº)\\mathbf{d} = \\mathbf{U}\\left(\\mathbf{y}=\\mu\\right) ùêÉ=ùêîùêó\\mathbf{D} = \\mathbf{U} \\mathbf{X}. Using cost C(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=plog(2œÄ)‚àílog|ùêîTŒ©ùêî|+(ùêù‚àíùêÉŒ¥)TŒ©(ùêù‚àíùêÉŒ¥) C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = p\\log\\left(2\\pi\\right)  - \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right|  + \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right)^{T} \\Omega  \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right) Since Œ©\\Omega diagonal (ùêù‚àíùêÉŒ¥)TŒ©(ùêù‚àíùêÉŒ¥)=‚àët=1:pŒ©t,t(ùêùt‚àíùêÉt,.Œ¥)2 \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right)^{T} \\Omega  \\left(\\mathbf{d} - \\mathbf{D}\\delta\\right) =  \\sum\\limits_{t=1:p} \\Omega_{t,t}\\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2} non-anoalous time step t‚ààT‚Ä≤t \\T^{\\prime} see Œ©t,t=1\\Omega_{t,t}=1 ùêÉt,.=ùüé\\mathbf{D}_{t,.}=\\mathbf{0} allowing summation written ‚àët=1:pŒ©t,t(ùêùt‚àíùêÉt,.Œ¥)2=‚àët‚ààT‚Ä≤ùêùt2+‚àëk=1:Kœâk‚àët=s[k]:e[k](ùêùt‚àíùêÉt,.Œ¥)2 \\sum\\limits_{t=1:p} \\Omega_{t,t}\\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2}= \\sum\\limits_{t \\T^{\\prime}} \\mathbf{d}_{t}^{2} + \\sum\\limits_{k=1:K}  \\omega_{k} \\sum\\limits_{t=s^{\\left[k\\right]}:e^{\\left[k\\right]}} \\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2} Using identities determinants gives log|ùêîTŒ©ùêî|=log|ùêîTùêî|+log|Œ©| \\log\\left| \\mathbf{U}^{T}\\Omega\\mathbf{U} \\right| = \\log\\left| \\mathbf{U}^{T}\\mathbf{U} \\right| + \\log\\left| \\Omega \\right|  log|Œ©|=‚àëk=1:K(s[k]‚àíe[k]+1)logœâk \\log\\left| \\Omega \\right| = \\sum\\limits_{k=1:K}  \\left(s^{\\left[k\\right]}-e^{\\left[k\\right]}+1\\right) \\log \\omega_{k} Subsituation terms cost function gives ‚àÇ‚àÇœâkC(ùê≤|ùõç,ùö∫,Œ¥,Œ©)=‚àí(s[k]‚àíe[k]+1)œâk+‚àët=s[k]:e[k](ùêùt‚àíùêÉt,.Œ¥)2 \\frac{\\partial}{\\partial \\omega_{k}} C\\left(\\mathbf{y}\\left| \\mathbf{\\mu}, \\mathbf{\\Sigma}, \\delta, \\Omega \\right. \\right) = - \\frac{\\left(s^{\\left[k\\right]}-e^{\\left[k\\right]}+1\\right)}{\\omega_{k}} + \\sum\\limits_{t=s^{\\left[k\\right]}:e^{\\left[k\\right]}} \\left(\\mathbf{d}_{t} - \\mathbf{D}_{t,.}\\delta\\right)^{2}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/quantile.html","id":"quantile-regression","dir":"Articles","previous_headings":"","what":"Quantile regression","title":"Quantile Cost Calculations","text":"Data belongs group kk whose time stamps set t‚ààTkt \\T_{k} common regression parameters Œ∏k\\theta_{k} residual variance œÉk\\sigma_{k} time step tt vector iid observations ùê≤t={yt,1,‚Ä¶,tt,nt}\\mathbf{y}_{t}=\\left\\{y_{t,1},\\ldots,t_{t,n_{t}}\\right\\} explained design matrix ùêót\\mathbf{X}_{t}. given quantile œÑ\\tau using check function œÅ(u,œÑ)=u(œÑ‚àí(u<0))\\rho\\left(u,\\tau\\right) = u\\left(\\tau - \\left(u<0\\right)\\right) Koenker Bassett (1978) show estimate Œ∏\\theta QR model can obtained solving convex optimization problem minŒ∏(‚àë=1ntœÅ(ùê≤t,‚àíùêót,(ùê¶t+Œ∏k),œÑ)) \\min_{\\theta} \\left( \\sum_{=1}^{n_{t}} \\rho\\left(\\mathbf{y}_{t,}- \\mathbf{X}_{t,}\\left(\\mathbf{m}_{t}+\\theta_{k}\\right),\\tau\\right) \\right) Solving gives maximum likelihood estimator asymmetric Laplace (AL) distributions (Geraci Bottai, 2007 Yu, Lu, Stander, 2003) likelihood L(ùê≤t|Œ∏k)=œÑnt(1‚àíœÑ)ntexp(‚àí‚àët=1ntœÅ(ùê≤t,‚àíùêót,(ùê¶t+Œ∏k),œÑ)) L\\left(\\mathbf{y}_{t} \\left| \\theta_k\\right.\\right) = \\tau^{n_{t}}\\left(1-\\tau\\right)^{n_{t}}\\exp\\left(- \\sum_{t=1}^{n_{t}} \\rho\\left(\\mathbf{y}_{t,}- \\mathbf{X}_{t,}\\left(\\mathbf{m}_{t}+\\theta_{k}\\right),\\tau\\right) \\right) ùê≤ÃÇt=ùê≤t‚àíùêótùê¶t\\hat{\\mathbf{y}}_{t} = \\mathbf{y}_{t} - \\mathbf{X}_{t} \\mathbf{m}_{t} log likelihood given l(ùê≤t|Œ∏k,œÉk)=njlog(œÑ(1‚àíœÑ))‚àí‚àë=1ntœÅ(ùê≤ÃÇt,‚àíùêót,iŒ∏k,œÑ) l\\left(\\mathbf{y}_{t} \\left| \\theta_k,\\sigma_k \\right.\\right) =  n_{j}\\log \\left(\\tau \\left(1-\\tau\\right)\\right) -  \\sum_{=1}^{n_{t}} \\rho\\left(\\hat{\\mathbf{y}}_{t,} - \\mathbf{X}_{t,}\\theta_{k},\\tau\\right) log-likelihood ùê≤t‚ààTk\\mathbf{y}_{t \\T_{k}} nk=‚àët‚ààTkntn_{k}=\\sum\\limits_{t\\T_{k}} n_{t}l(ùê≤t‚ààTk|Œ∏k,œÉk,ùêót)=nklog(œÑ(1‚àíœÑ))‚àí‚àët‚ààTk‚àë=1ntœÅ(ùê≤ÃÇt,‚àíùêót,iŒ∏k,œÑ) l\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\theta_k,\\sigma_k,\\mathbf{X}_{t}\\right.\\right) =  n_{k}\\log\\left(\\tau \\left(1-\\tau\\right)\\right) -  \\sum_{t \\T_{k}}\\sum_{=1}^{n_{t}} \\rho\\left(\\hat{\\mathbf{y}}_{t,} - \\mathbf{X}_{t,}\\theta_{k},\\tau\\right) cost twice negative log likelihood plus penalty Œ≤\\beta giving C(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTk‚àë=1ntœÅ(ùê≤ÃÇt,‚àíùêót,iŒ∏k,œÑ)‚àí2nklog(œÑ(1‚àíœÑ))+Œ≤ C\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}}\\sum_{=1}^{n_{t}} \\rho\\left(\\hat{\\mathbf{y}}_{t,} - \\mathbf{X}_{t,}\\theta_{k},\\tau\\right) - 2n_{k}\\log\\left(\\tau \\left(1-\\tau\\right)\\right)  + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/quantile.html","id":"baseline-no-anomaly","dir":"Articles","previous_headings":"Quantile regression","what":"Baseline: No Anomaly","title":"Quantile Cost Calculations","text":"Œ∏k=0\\theta_{k}=0 penalty Œ≤=0\\beta = 0","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/quantile.html","id":"collective-anomaly","dir":"Articles","previous_headings":"Quantile regression","what":"Collective anomaly","title":"Quantile Cost Calculations","text":"Estimate Œ∏k\\theta_{k} using ??? penalty Œ≤\\betaC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTk‚àë=1ntœÅ(ùê≤ÃÇt,‚àíùêót,iŒ∏ÃÇk,œÑ)‚àí2nklog(œÑ(1‚àíœÑ))+Œ≤ C\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}}\\sum_{=1}^{n_{t}} \\rho\\left(\\hat{\\mathbf{y}}_{t,} - \\mathbf{X}_{t,}\\hat{\\theta}_{k},\\tau\\right) - 2n_{k}\\log\\left(\\tau \\left(1-\\tau\\right)\\right)  + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/quantile.html","id":"point-anomaly","dir":"Articles","previous_headings":"Quantile regression","what":"Point Anomaly","title":"Quantile Cost Calculations","text":"nt>0n_t > 0 proceed like collective anomaly. Otherwise select Œ∏ÃÇ\\hat{\\theta} $\\mathbf{y}}_{t,} - \\mathbf{X}_{t,}\\hat{\\theta}_{k}= 0$","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"linear-regression","dir":"Articles","previous_headings":"","what":"Linear regression","title":"Regression Cost Calculations","text":"time step tt vector iid observations ùê≤t={yt,1,‚Ä¶,yt,p}\\mathbf{y}_{t}=\\left\\{y_{t,1},\\ldots,y_{t,p}\\right\\} explained design matrix ùêót\\mathbf{X}_{t} modelled multivariate Gaussian distribution. Consider known, ‚Äò‚Äôbackground‚Äô‚Äô, parameters ùê¶t\\mathbf{m}_{t} precision matrix ùêít=ùêî‚Ä≤ùêî\\mathbf{S}_{t} = \\mathbf{U}^{\\prime}\\mathbf{U} deviation modelled Œ∏\\theta Œõ\\Lambda likelihood L(ùê≤t|Œ∏,Œª)=(2œÄ)‚àíp/2det(ùêít)1/2det(Œõ)1/2exp(‚àí12(ùê≤t‚àíùêótùê¶t‚àíùêótŒ∏)‚Ä≤ùêî‚Ä≤Œõùêî(ùê≤t‚àíùêótùê¶t‚àíùêótŒ∏)) L\\left(\\mathbf{y}_{t} \\left| \\theta,\\lambda\\right.\\right) =  \\left(2\\pi\\right)^{-p/2}  \\det\\left(\\mathbf{S}_{t}\\right)^{1/2} \\det\\left(\\Lambda\\right)^{1/2} \\exp\\left(-\\frac{1}{2}\\left( \\mathbf{y}_{t} - \\mathbf{X}_{t} \\mathbf{m}_{t} - \\mathbf{X}_{t} \\theta\\right)^{\\prime} \\mathbf{U}^{\\prime} \\Lambda \\mathbf{U} \\left( \\mathbf{y}_{t}  - \\mathbf{X}_{t} \\mathbf{m}_{t} - \\mathbf{X}_{t} \\theta\\right) \\right) Pre whitening known values ùê≤ÃÇt=ùêît(ùê≤t‚àíùêótùê¶t)\\hat{\\mathbf{y}}_{t} = \\mathbf{U}_{t} \\left(\\mathbf{y}_{t} - \\mathbf{X}_{t} \\mathbf{m}_{t}\\right) ùêóÃÇt=ùêîtùêót\\hat{\\mathbf{X}}_{t} = \\mathbf{U}_{t} \\mathbf{X}_{t} gives L(ùê≤t|Œ∏,Œõ)=(2œÄ)‚àíp/2det(ùêít)1/2det(Œõ)1/2exp(‚àí12(ùê≤ÃÇt‚àíùêóÃÇtŒ∏)‚Ä≤Œõ(ùê≤ÃÇt‚àíùêóÃÇtŒ∏)) L\\left(\\mathbf{y}_{t} \\left| \\theta,\\Lambda\\right.\\right) =  \\left(2\\pi\\right)^{-p/2}  \\det\\left(\\mathbf{S}_{t}\\right)^{1/2} \\det\\left(\\Lambda\\right)^{1/2} \\exp\\left(-\\frac{1}{2}\\left( \\hat{\\mathbf{y}}_{t} - \\hat{\\mathbf{X}}_{t} \\theta\\right)^{\\prime} \\Lambda \\left( \\hat{\\mathbf{y}}_{t}  - \\hat{\\mathbf{X}}_{t} \\theta\\right) \\right) Grouping known values Kt=plog(2œÄ)‚àílog(detùêít)K_{t} = p\\log\\left(2\\pi\\right) - \\log\\left(\\det{\\mathbf{S}_{t}}\\right) log likelihood l(ùê≤t|Œ∏,Œõ)=‚àí12Kt+12log(det(Œõ))‚àí12(ùê≤ÃÇt‚àíùêóÃÇtŒ∏)‚Ä≤Œõ(ùê≤ÃÇt‚àíùêóÃÇtŒ∏) l\\left(\\mathbf{y}_{t} \\left| \\theta,\\Lambda \\right.\\right) =  -\\frac{1}{2}K_{t}  + \\frac{1}{2}\\log\\left( \\det\\left(\\Lambda\\right)\\right) -\\frac{1}{2}\\left( \\hat{\\mathbf{y}}_{t} - \\hat{\\mathbf{X}}_{t} \\theta\\right)^{\\prime} \\Lambda \\left( \\hat{\\mathbf{y}}_{t}  - \\hat{\\mathbf{X}}_{t} \\theta\\right) Suppose anomaly common parameters occurs nkn_{k} consecuative time steps set TkT_{k}. log-likelihood ùê≤t‚ààTk\\mathbf{y}_{t \\T_{k}} l(ùê≤t‚ààTk|Œ∏k,Œõk)=‚àí12‚àët‚ààTkKt+nk2log(det(Œõ))‚àí12‚àët‚ààTk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k)‚Ä≤Œõk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k) l\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\theta_{k},\\Lambda_{k} \\right.\\right) =  -\\frac{1}{2}\\sum_{t \\T_{k}}K_{t}  + \\frac{n_{k}}{2}\\log\\left( \\det\\left(\\Lambda\\right)\\right) -\\frac{1}{2}\\sum_{t \\T_{k}}\\left( \\hat{\\mathbf{y}}_{t} - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right)^{\\prime} \\Lambda_{k} \\left( \\hat{\\mathbf{y}}_{t}  - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right) cost twice negative log likelihood plus penalty Œ≤\\beta giving C(ùê≤t‚ààTk|Œ∏k,Œõk)=‚àët‚ààTkKt‚àínklog(det(Œõ))+‚àët‚ààTk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k)‚Ä≤Œõk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k)+Œ≤ C\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\theta_{k}, \\Lambda_{k} \\right.\\right) =  \\sum_{t \\T_{k}}K_{t}  - n_{k}\\log\\left( \\det\\left(\\Lambda\\right)\\right) +\\sum_{t \\T_{k}}\\left( \\hat{\\mathbf{y}}_{t} - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right)^{\\prime} \\Lambda_{k} \\left( \\hat{\\mathbf{y}}_{t}  - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right) + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"sufficent-statistics","dir":"Articles","previous_headings":"Linear regression","what":"Sufficent statistics","title":"Regression Cost Calculations","text":"Computation greatly aided able keep adequate sufficent statistics. Expanding summation cost gives ‚àët‚ààTk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k)‚Ä≤Œõk(ùê≤ÃÇt‚àíùêóÃÇtŒ∏k)=‚àët‚ààTk(ùê≤ÃÇt‚Ä≤Œõùê≤ÃÇt+Œ∏k‚Ä≤ùêóÃÇt‚Ä≤ŒõùêóÃÇtŒ∏k‚àí2Œ∏k‚Ä≤ùêóÃÇt‚Ä≤Œõùê≤ÃÇt) \\sum_{t \\T_{k}}\\left( \\hat{\\mathbf{y}}_{t} - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right)^{\\prime} \\Lambda_{k} \\left( \\hat{\\mathbf{y}}_{t}  - \\hat{\\mathbf{X}}_{t} \\theta_{k}\\right) =  \\sum_{t \\T_{k}} \\left( \\hat{\\mathbf{y}}^{\\prime}_{t} \\Lambda \\hat{\\mathbf{y}}_{t} + \\theta^{\\prime}_{k}\\hat{\\mathbf{X}}^{\\prime}_{t} \\Lambda \\hat{\\mathbf{X}}_{t} \\theta_{k} - 2 \\theta^{\\prime}_{k} \\hat{\\mathbf{X}}^{\\prime}_{t}\\Lambda \\hat{\\mathbf{y}}_{t} \\right) ‚àët‚ààTk(tr(ùê≤ÃÇtùê≤ÃÇt‚Ä≤Œõ)+Œ∏k‚Ä≤ùêóÃÇt‚Ä≤ŒõùêóÃÇtŒ∏k‚àí2Œ∏k‚Ä≤ùêóÃÇt‚Ä≤Œõùê≤ÃÇt) \\sum_{t \\T_{k}} \\left( \\mathrm{tr}\\left( \\hat{\\mathbf{y}}_{t}\\hat{\\mathbf{y}}^{\\prime}_{t} \\Lambda \\right) + \\theta^{\\prime}_{k}\\hat{\\mathbf{X}}^{\\prime}_{t} \\Lambda \\hat{\\mathbf{X}}_{t} \\theta_{k} - 2 \\theta^{\\prime}_{k} \\hat{\\mathbf{X}}^{\\prime}_{t}\\Lambda \\hat{\\mathbf{y}}_{t} \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"baseline-no-anomaly","dir":"Articles","previous_headings":"Linear regression","what":"Baseline: No Anomaly","title":"Regression Cost Calculations","text":"Œ∏k=ùüé\\theta_{k}=\\mathbf{0}, Œõk\\Lambda_{k} identify matrix penalty Œ≤=0\\beta = 0. resulting csot CB(ùê≤t‚ààTk|Œ∏k,Œõk)=‚àët‚ààTkKt+‚àët‚ààTkùê≤ÃÇt‚Ä≤ùê≤ÃÇt C_{B}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\theta_{k}, \\Lambda_{k} \\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  + \\sum_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\hat{\\mathbf{y}}_{t}","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"anomaly-in-regression-parameters","dir":"Articles","previous_headings":"Linear regression > Collective Anomalies","what":"Anomaly in Regression parameters","title":"Regression Cost Calculations","text":"change variance Œõk\\Lambda_{k} identify matrix. estimate Œ∏ÃÇk\\hat{\\theta}_{k} Œ∏k\\theta_{k} can selected minimise cost taking Œ∏ÃÇk=(‚àët‚ààTkùêóÃÇt‚Ä≤ùêóÃÇt)‚àí1(‚àët‚ààTkùêóÃÇt‚Ä≤ùê≤ÃÇt) \\hat{\\theta}_{k} = \\left( \\sum\\limits_{t \\T_k} \\hat{\\mathbf{X}}_{t}^{\\prime}  \\hat{\\mathbf{X}}_{t} \\right)^{-1} \\left(  \\sum\\limits_{t \\T_k} \\hat{\\mathbf{X}}_{t}^{\\prime}  \\hat{\\mathbf{y}}_{t} \\right) CC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+(‚àët‚ààTkùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚àí(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚Ä≤(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùêót)‚àí1(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)+Œ≤ C_{C}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  + \\left( \\sum_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) - \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right)^{\\prime} \\left( \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t} \\right)^{-1} \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"anomaly-in-variance","dir":"Articles","previous_headings":"Linear regression > Collective Anomalies","what":"Anomaly in Variance","title":"Regression Cost Calculations","text":"mean anomaly regression parameters Œ∏k=0\\theta_{k}=0. estimate œÉk\\sigma_{k} therfore changes œÉÃÇk=1nk‚àët‚ààTkùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} cost CC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+nklog(œÉÃÇk)+nk+Œ≤ C_{C}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  +n_{k} \\log\\left(\\hat{\\sigma}_{k}\\right) +n_{k} +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"anomaly-in-regression-parameters-and-variance","dir":"Articles","previous_headings":"Linear regression > Collective Anomalies","what":"Anomaly in regression parameters and variance","title":"Regression Cost Calculations","text":"Since ‚àët‚ààTk(ùê≤ÃÇt‚àíùêótŒ∏k)‚Ä≤ùêít‚àí1(ùê≤ÃÇt‚àíùêótŒ∏k)=‚àët‚ààTk(ùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt‚àí2Œ∏k‚Ä≤ùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt+Œ∏k‚Ä≤ùêót‚Ä≤ùêít‚àí1ùêótŒ∏k) \\sum_{t \\T_{k}} \\left( \\hat{\\mathbf{y}}_{t} - \\mathbf{X}_{t} \\theta_{k}\\right)^{\\prime} \\mathbf{S}_{t}^{-1} \\left( \\hat{\\mathbf{y}}_{t} - \\mathbf{X}_{t} \\theta_{k}\\right) = \\sum_{t \\T_{k}} \\left( \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} - 2 \\theta_{k}^{\\prime}\\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1} \\hat{\\mathbf{y}}_{t} + \\theta_{k}^{\\prime}\\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t}  \\theta_{k} \\right) estimate Œ∏ÃÇk\\hat{\\theta}_{k} Œ∏k\\theta_{k} can selected minimise cost taking Œ∏ÃÇk=(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùêót)‚àí1(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt) \\hat{\\theta}_{k} = \\left( \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t} \\right)^{-1} \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) Subsitution result cost gives œÉÃÇk=1nk‚àët‚ààTk(ùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt‚àí2Œ∏ÃÇk‚Ä≤ùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt+Œ∏ÃÇk‚Ä≤ùêót‚Ä≤ùêít‚àí1ùêótŒ∏ÃÇk) \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\sum_{t \\T_{k}} \\left( \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} - 2 \\hat{\\theta}_{k}^{\\prime}\\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1} \\hat{\\mathbf{y}}_{t} + \\hat{\\theta}_{k}^{\\prime}\\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t}  \\hat{\\theta}_{k} \\right)  simplifies œÉÃÇk=1nk[(‚àët‚ààTkùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚àí(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚Ä≤(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùêót)‚àí1(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)] \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\left[ \\left( \\sum_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) - \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right)^{\\prime} \\left( \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t} \\right)^{-1} \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) \\right] cost given CC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+nklog(œÉÃÇk)+nk+Œ≤ C_{C}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  +n_{k} \\log\\left(\\hat{\\sigma}_{k}\\right) +n_{k} +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"anomaly-in-regression-parameters-1","dir":"Articles","previous_headings":"Linear regression > Collective Anomalies","what":"Anomaly in Regression parameters","title":"Regression Cost Calculations","text":"change variance œÉk=1\\sigma_{k}=1. estimate Œ∏ÃÇk\\hat{\\theta}_{k} unchanged gives cost CC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+(‚àët‚ààTkùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚àí(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)‚Ä≤(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùêót)‚àí1(‚àët‚ààTkùêót‚Ä≤ùêít‚àí1ùê≤ÃÇt)+Œ≤ C_{C}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  + \\left( \\sum_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) - \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right)^{\\prime} \\left( \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\mathbf{X}_{t} \\right)^{-1} \\left(  \\sum\\limits_{t \\T_k} \\mathbf{X}_{t}^{\\prime}  \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} \\right) +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"anomaly-in-variance-1","dir":"Articles","previous_headings":"Linear regression > Collective Anomalies","what":"Anomaly in Variance","title":"Regression Cost Calculations","text":"mean anomaly regression parameters Œ∏k=0\\theta_{k}=0. estimate œÉk\\sigma_{k} therfore changes œÉÃÇk=1nk‚àët‚ààTkùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_{k}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} cost CC(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+nklog(œÉÃÇk)+nk+Œ≤ C_{C}\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  +n_{k} \\log\\left(\\hat{\\sigma}_{k}\\right) +n_{k} +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/regression_cost_calcs.html","id":"point-anomaly","dir":"Articles","previous_headings":"Linear regression","what":"Point anomaly","title":"Regression Cost Calculations","text":"point anomaly occurs single time instance represented variance anomaly. Naively cost computed using formulea variance anomaly Cp(ùê≤t|œÉt)=Kt+ntlog(œÉÃÇt)+nt+Œ≤ C_{p}\\left(\\mathbf{y}_{t}\\left| \\sigma_{t}\\right.\\right) =  K_{t} + n_{t} \\log\\left( \\hat{\\sigma}_{t} \\right) + n_{t} + \\beta  œÉÃÇt=1ntùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt \\hat{\\sigma}_{t} = \\frac{1}{n_{t}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t} Relating background cost see point anomalies may accepted capa search f(œÉÃÇt,Œ≥,Œ≤)=Cp(yt|Œºt,œÉt)‚àíCB(yt|Œºt,œÉt)=ntlog(œÉÃÇt)+nt+Œ≤‚àíntœÉÃÇt<0 f\\left(\\hat{\\sigma}_{t},\\gamma,\\beta\\right) = C_{p}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) - C_{B}\\left(y_{t}\\left| \\mu_{t},\\sigma_{t}\\right.\\right) = n_{t} \\log \\left( \\hat{\\sigma}_{t} \\right) + n_{t} + \\beta - n_{t} \\hat{\\sigma}_{t} < 0 following plot shows log(œÉÃÇt)+1‚àíœÉÃÇt\\log \\left( \\hat{\\sigma}_{t} \\right) + 1 - \\hat{\\sigma}_{t} indicates point anomalies may declared outlying inlying data.  case nt=1n_{t}=1 Fisch et al.¬†control modifying cost point anomaly expressed Cp(yt|œÉt,ùêót)=log(exp(‚àíŒ≤)+œÉÃÇt)+Kt+1+Œ≤ C_{p}\\left(y_{t}\\left| \\sigma_{t}, \\mathbf{X}_{t}\\right.\\right) =  \\log\\left(\\exp\\left(-\\beta\\right) + \\hat{\\sigma}_{t} \\right) + K_{t} + 1 + \\beta effect allowing outlier anomalies, something can much easily acheived taking œÉÃÇt=max(1,1ntùê≤ÃÇt‚Ä≤ùêít‚àí1ùê≤ÃÇt) \\hat{\\sigma}_{t} = \\max\\left(1,\\frac{1}{n_{t}} \\hat{\\mathbf{y}}_{t}^{\\prime} \\mathbf{S}_{t}^{-1}\\hat{\\mathbf{y}}_{t}\\right) giving cost C(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àët‚ààTkKt+nklog(œÉÃÇk)+1œÉÃÇk‚àët‚ààTk(ùê≤ÃÇtùêít‚àí1ùê≤ÃÇt)+Œ≤ C\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\sum_{t \\T_{k}} K_{t}  +n_{k} \\log\\left(\\hat{\\sigma}_{k}\\right) +\\frac{1}{\\hat{\\sigma}_{k}}\\sum_{t \\T_{k}} \\left( \\hat{\\mathbf{y}}_{t} \\mathbf{S}_{t}^{-1} \\hat{\\mathbf{y}}_{t} \\right) +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"univariate-gaussian","dir":"Articles","previous_headings":"","what":"Univariate Gaussian","title":"Replicate Cost Calculations","text":"Data belongs group kk whose time stamps set TkT_{k} can additive mean anomaly mkm_{k} multiplicative variance anomaly sks_{k} common t‚ààTkt \\T_{k}. t‚ààTkt \\T_{k}. time step tt vector iid observations ùê≤t={yt,1,‚Ä¶,tt,nt}\\mathbf{y}_{t}=\\left\\{y_{t,1},\\ldots,t_{t,n_{t}}\\right\\} made. probability yt,iy_{t,} P(yt|Œºt,mk,œÉk,sk)=12œÄœÉtskexp(‚àí12œÉtsk(yt‚àíŒºt‚àímk)2) P\\left(y_t \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) = \\frac{1}{\\sqrt{2\\pi\\sigma_{t}s_{k}}}\\exp\\left(-\\frac{1}{2\\sigma_{t}s_{k}}\\left(y_{t} - \\mu_t - m_{k}\\right)^2\\right) likelihood ntn_{t} observations ùê≤t\\mathbf{y}_{t} L(ùê≤t|Œºt,mk,œÉk,sk)=(2œÄsk)‚àínt/2œÉt‚àínt/2exp(‚àí12skœÉt‚àë=1nt(yt,‚àíŒºt‚àímk)2) L\\left(\\mathbf{y}_{t} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  \\left(2\\pi s_{k}\\right)^{-n_{t}/2}  \\sigma_{t}^{-n_{t}/2} \\exp\\left(-\\frac{1}{2s_{k}\\sigma_{t}}\\sum\\limits_{=1}^{n_{t}} \\left(y_{t,} - \\mu_t - m_{k}\\right)^{2}\\right)  log likelihood l(ùê≤t|Œºt,mk,œÉk,sk)=‚àínt2log(2œÄsk)‚àínt2log(œÉt)‚àí12skœÉt‚àë=1nt(yt,‚àíŒºt‚àímk)2 l\\left(\\mathbf{y}_{t} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  -\\frac{n_{t}}{2}\\log\\left(2\\pi s_{k}\\right)  -\\frac{n_{t}}{2}\\log\\left(\\sigma_{t}\\right) -\\frac{1}{2s_{k}\\sigma_{t}}\\sum\\limits_{=1}^{n_{t}} \\left(y_{t,} - \\mu_t - m_{k}\\right)^{2} log-likelihood ùê≤t‚ààTk\\mathbf{y}_{t \\T_{k}} nk=‚àët‚ààTkntn_{k}=\\sum\\limits_{t\\T_{k}} n_{t}l(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=‚àínk2log(2œÄsk)‚àí12‚àët‚ààTkntlog(œÉt)‚àí12sk‚àët‚ààTk‚àë=1nt(yt,‚àíŒºt‚àímk)2œÉt l\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  -\\frac{n_{k}}{2} \\log\\left(2\\pi s_{k}\\right) -\\frac{1}{2}\\sum\\limits_{t \\T_{k}} n_{t}\\log\\left(\\sigma_{t}\\right) -\\frac{1}{2s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\sum_{=1}^{n_{t}}\\left(y_{t,} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} cost twice negative log likelihood plus penalty Œ≤\\beta giving C(ùê≤t‚ààTk|Œºt,mk,œÉk,sk)=nklog(2œÄsk)+‚àët‚ààTkntlog(œÉt)+1sk‚àët‚ààTk‚àë=1nt(yt,‚àíŒºt‚àímk)2œÉt+Œ≤ C\\left(\\mathbf{y}_{t \\T_{k}} \\left| \\mu_t,m_k,\\sigma_k,s_k\\right.\\right) =  n_{k} \\log\\left(2\\pi s_{k}\\right) +\\sum\\limits_{t \\T_{k}} n_{t}\\log\\left(\\sigma_{t}\\right) +\\frac{1}{s_{k}}\\sum\\limits_{t \\T_{k}} \\frac{\\sum_{=1}^{n_{t}}\\left(y_{t,} - \\mu_t - m_{k}\\right)^2}{\\sigma_{t}} +\\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"anomaly-in-mean-and-varinace","dir":"Articles","previous_headings":"Univariate Gaussian","what":"Anomaly in mean and varinace","title":"Replicate Cost Calculations","text":"Estimates mÃÇ\\hat{m} mm œÉÃÇ\\hat{\\sigma} œÉ\\sigma can selected minimise cost taking mÃÇk=(‚àët‚ààTk‚àë=1nt(yt‚àíŒºt)œÉt)(‚àët‚ààTkntœÉt)‚àí1 \\hat{m}_{k} = \\left( \\sum\\limits_{t \\T_k} \\frac{\\sum\\limits_{=1}^{n_t} \\left(y_t-\\mu_t\\right)}{\\sigma_t} \\right)\\left(  \\sum\\limits_{t \\T_k} \\frac{n_{t}}{\\sigma_t}\\right)^{-1}  sÃÇk=1nk‚àët‚ààTk‚àë=1nt(yt,‚àíŒºt‚àímÃÇk)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_{k}} \\frac{\\sum_{=1}^{n_{t}}\\left(y_{t,} - \\mu_t - \\hat{m}_{k}\\right)^2}{\\sigma_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"anomaly-in-mean","dir":"Articles","previous_headings":"Univariate Gaussian","what":"Anomaly in Mean","title":"Replicate Cost Calculations","text":"change variance sk=1s_{k}=1. Estimate mÃÇk\\hat{m}_{k} unchanged anomaly mean variance.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"anomaly-in-variance","dir":"Articles","previous_headings":"Univariate Gaussian","what":"Anomaly in Variance","title":"Replicate Cost Calculations","text":"mean anomaly mk=0m_{k}=0. Estimate sÃÇk\\hat{s}_{k} therfore changes sÃÇk=1nk‚àët‚ààTk‚àë=1nt(yt,‚àíŒºt)2œÉt \\hat{s}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_{k}} \\frac{\\sum_{=1}^{n_{t}}\\left(y_{t,} - \\mu_t\\right)^2}{\\sigma_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"no-anomaly-baseline","dir":"Articles","previous_headings":"Univariate Gaussian","what":"No Anomaly (Baseline)","title":"Replicate Cost Calculations","text":"mk=0m_{k}=0 sk=1s_{k}=1 penalty Œ≤=0\\beta = 0","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/replicate_cost_calcs.html","id":"point-anomaly","dir":"Articles","previous_headings":"Univariate Gaussian","what":"Point anomaly","title":"Replicate Cost Calculations","text":"Assuming tt least 2 unique values need represent point time differently [Check].","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"no-anomaly-baseline","dir":"Articles","previous_headings":"","what":"No Anomaly (Baseline)","title":"Univariate Gaussian Cost Calculations","text":"Œºk=0\\mu_{k}=0 œÉk=1\\sigma_{k}=1 penalty cost CB(yt‚ààTk|mt‚ààTk,st‚ààTk)=nklog(2œÄ)+‚àët‚ààTklog(st)+‚àët‚ààTk(yt‚àímt)2st C_{B}\\left(y_{t \\T_{k}} \\left|  m_{t \\T_{k}}, s_{t \\T_{k}} \\right.\\right) =  n_{k} \\log\\left(2\\pi \\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(s_{t}\\right) +\\sum\\limits_{t \\T_{k}} \\frac{\\left(y_{t} - m_t\\right)^2}{s_{t}}","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"collective-anomalies","dir":"Articles","previous_headings":"","what":"Collective Anomalies","title":"Univariate Gaussian Cost Calculations","text":"Collective anomalies last single timestep chnage mean /variance.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"anomaly-in-mean-and-variance","dir":"Articles","previous_headings":"Collective Anomalies","what":"Anomaly in Mean and Variance","title":"Univariate Gaussian Cost Calculations","text":"Estimates ŒºÃÇ\\hat{\\mu} Œº\\mu œÉÃÇ\\hat{\\sigma} œÉ\\sigma can selected minimise cost taking ŒºÃÇk=(‚àët‚ààTkyt‚àímtst)(‚àët‚ààTk1st)‚àí1 \\hat{\\mu}_{k} = \\left( \\sum\\limits_{t \\T_k} \\frac{y_t-m_t}{s_t} \\right)\\left(  \\sum\\limits_{t \\T_k} \\frac{1}{s_t}\\right)^{-1}  œÉÃÇk=1nk‚àët‚ààTk(yt‚àímt‚àíŒºÃÇk)2st \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-m_t - \\hat{\\mu}_{k}\\right)^2}{s_t} Subsituting cost gives CMV(yt‚ààTk|mt‚ààTk,st‚ààTk,ŒºÃÇk,œÉÃÇk)=nklog(2œÄœÉÃÇk)+‚àët‚ààTklog(st)+nk+Œ≤ C_{MV}\\left(y_{t \\T_{k}} \\left| m_{t \\T_{k}}, s_{t \\T_{k}}, \\hat{\\mu}_k,\\hat{\\sigma}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{\\sigma}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(s_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"anomaly-in-mean","dir":"Articles","previous_headings":"Collective Anomalies","what":"Anomaly in Mean","title":"Univariate Gaussian Cost Calculations","text":"change variance œÉk=1\\sigma_{k}=1. Estimate ŒºÃÇk\\hat{\\mu}_{k} unchanged anomaly mean variance cost CM(yt‚ààTk|mt‚ààTk,st‚ààTk,ŒºÃÇk)=nklog(2œÄ)+‚àët‚ààTklog(st)+‚àët‚ààTk(yt‚àímt‚àíŒºÃÇk)2st+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| m_{t \\T_{k}}, s_{t \\T_{k}}, \\hat{\\mu}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(s_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t - m_t - \\hat{\\mu}_{k}\\right)^2}{s_t} + \\beta can written CM(yt‚ààTk|mt‚ààTk,st‚ààTk,ŒºÃÇk)=nklog(2œÄ)+‚àët‚ààTklog(st)+‚àët‚ààTk(yt‚àímt)2st‚àíŒºÃÇ2‚àët‚ààTk1st+Œ≤ C_{M}\\left(y_{t \\T_{k}} \\left| m_{t \\T_{k}}, s_{t \\T_{k}}, \\hat{\\mu}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(s_{t}\\right) +\\sum\\limits_{t \\T_k} \\frac{ \\left(y_t - m_t\\right)^2}{s_t} -\\hat{\\mu}^{2} \\sum\\limits_{t \\T_k} \\frac{ 1}{s_t} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"anomaly-in-variance","dir":"Articles","previous_headings":"Collective Anomalies","what":"Anomaly in Variance","title":"Univariate Gaussian Cost Calculations","text":"mean anomaly Œºk=0\\mu_{k}=0. Estimate œÉÃÇk\\hat{\\sigma}_{k} therfore changes œÉÃÇk=1nk‚àët‚ààTk(yt‚àímt)2st \\hat{\\sigma}_{k} = \\frac{1}{n_{k}} \\sum\\limits_{t \\T_k} \\frac{ \\left(y_t-m_t\\right)^2}{s_t} cost CV(yt‚ààTk|mt‚ààTk,st‚ààTk,œÉÃÇk)=nklog(2œÄœÉÃÇk)+‚àët‚ààTklog(st)+nk+Œ≤ C_{V}\\left(y_{t \\T_{k}} \\left| m_{t \\T_{k}}, s_{t \\T_{k}}, \\hat{\\sigma}_k\\right.\\right) =  n_{k} \\log\\left(2\\pi \\hat{\\sigma}_{k}\\right) +\\sum\\limits_{t \\T_{k}} \\log\\left(s_{t}\\right) +n_{k} + \\beta","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_gaussian.html","id":"point-anomaly","dir":"Articles","previous_headings":"","what":"Point anomaly","title":"Univariate Gaussian Cost Calculations","text":"point anomaly time tt treated single time step change mean variance. However cost point anomaly higher background cost yty_{t} , sense, close background. cost point anomaly mean expressed CPM(yt|mt,st,ŒºÃÇk)=log(2œÄst)+Œ≤ C_{P_{M}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\mu}_{k}\\right.\\right) =  \\log\\left(2\\pi s_{t}\\right) + \\beta ‚Äôs value relative baseline cost can expressed using standardised variable zt=yt‚àímtstz_{t} = \\frac{y_t-m_t}{\\sqrt{s_{t}}} CPM(yt|mt,st,ŒºÃÇk)‚àíCB(yt|mt,st)=Œ≤‚àízt2 C_{P_{M}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\mu}_{k}\\right.\\right) - C_{B}\\left(y_{t}\\left| m_{t},s_{t}\\right.\\right) =  \\beta - z_{t}^{2} penaly value case can clearly linked number standard deviations away mean declare point anomaly. case point anomaly variance naive computation cost gives CPV(yt|mt,st,œÉÃÇk)=log(2œÄst)+log(zt2)+1+Œ≤ C_{P_{V}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\sigma}_{k}\\right.\\right)=  \\log\\left(2\\pi s_{t} \\right) + \\log\\left(z_{t}^{2}\\right) + 1 + \\beta CPV(yt|mt,st,œÉÃÇk)‚àíCB(yt|mt,st)=log(zt2)+1+Œ≤‚àízt2 C_{P_{V}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\sigma}_{k}\\right.\\right) - C_{B}\\left(y_{t}\\left| m_{t},s_{t}\\right.\\right) =  \\log\\left(z_{t}^{2}\\right) + 1 + \\beta - z_{t}^2 Since lim(zt2)‚Üí‚àû\\lim\\left(z_{t}^{2}\\right) \\rightarrow \\infty zt2‚Üí0z_{t}^{2} \\rightarrow 0 niave definition point anomaly variance always produce point anomalies ztz_{t} close 0. Fisch et al.¬†introduce term Œ≥\\gamma control . modified cost point anomaly variance expressed CPV(yt|mt,st,œÉÃÇk,Œ≥)=log(2œÄst)+log(Œ≥+zt2)+1+Œ≤ C_{P_{V}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\sigma}_{k},\\gamma\\right.\\right)=  \\log\\left(2\\pi s_{t} \\right) + \\log\\left(\\gamma + z_{t}^{2}\\right) + 1 + \\beta Relating background cost see point anomalies may accepted capa search f(zt,Œ≥,Œ≤)=CPV(yt|mt,st,œÉÃÇk,Œ≥)‚àíCB(yt|mt,st)=log(Œ≥+zt2)+1+Œ≤‚àízt2<0 f\\left(z_{t},\\gamma,\\beta\\right) =  C_{P_{V}}\\left(y_{t}\\left| m_{t},s_{t},\\hat{\\sigma}_{k},\\gamma\\right.\\right) -  C_{B}\\left(y_{t}\\left| m_{t},s_{t}\\right.\\right) =  \\log\\left(\\gamma + z_{t}^{2}\\right) + 1 + \\beta - z_{t}^2 < 0 ensure anomalies declared ztz_{t} close 0 implies Œ≥\\gamma selected f(0,Œ≥,Œ≤)‚â•0f\\left(0,\\gamma,\\beta\\right) \\geq 0 Œ≥<1\\gamma < 1 gradient ‚àÇ‚àÇzt2f(zt,Œ≥,Œ≤)=1Œ≥+zt2‚àí1>0 \\frac{\\partial}{\\partial z_{t}^2} f\\left(z_{t},\\gamma,\\beta\\right) = \\frac{1}{\\gamma + z_{t}^{2}} - 1 > 0   ztz_{t} close zero. following plot shows impact small zz three different choices Œ≥\\gamma: non correction Œ≥0=0\\gamma_{0} = 0 allows point anomalies ztz_{t} approaches 0 correction Œ≥1=exp(‚àíŒ≤)\\gamma_{1} = \\exp\\left(-\\beta\\right) proposed Fisch et al. minimal correction Œ≥2=exp(‚àí(1+Œ≤))\\gamma_{2} = \\exp\\left(-\\left(1+\\beta\\right)\\right) f(0,Œ≥2,Œ≤)=0f\\left(0,\\gamma_{2},\\beta\\right) = 0.  clear difference become small zz increases. supported plot shows value ztz_{t} point anomaly might occur Œ≤\\beta varies. Area line potential anomaly values.","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_poisson.html","id":"no-anomaly-baseline","dir":"Articles","previous_headings":"","what":"No Anomaly (Baseline)","title":"Univariate Poisson Cost Calculations","text":"case Œªk=1\\lambda_{k}=1 penalty CB(yt‚ààTk|rt‚ààTk)=2‚àët‚ààTkrt‚àí2‚àët‚ààTkytlog(rt)+2‚àët‚ààTklog(yt!) C_{B}\\left(y_{t \\T_{k}} \\left| r_{t \\T_{k}}\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} r_{t} - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right)","code":""},{"path":"https://waternumbers.github.io/anomalous/articles/univariate_poisson.html","id":"anomaly-in-rate","dir":"Articles","previous_headings":"","what":"Anomaly in Rate","title":"Univariate Poisson Cost Calculations","text":"estimate ŒªÃÇk\\hat{\\lambda}_{k} Œªk\\lambda_{k} can selected minimise cost taking ŒªÃÇk=‚àët‚ààTkyt‚àët‚ààTkrt \\hat{\\lambda}_{k} = \\frac{ \\sum\\limits_{t \\T_{k}} y_{t} }{\\sum\\limits_{t \\T_{k}} r_{t}} CA(yt‚ààTk|ŒªÃÇk,rt‚ààTk)=2‚àët‚ààTkyt‚àí2log(ŒªÃÇk)‚àët‚ààTkyt‚àí2‚àët‚ààTkytlog(rt)+2‚àët‚ààTklog(yt!)+Œ≤ C_{}\\left(y_{t \\T_{k}} \\left| \\hat{\\lambda}_k,r_{t \\T_{k}}\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} y_{t} - 2 \\log\\left(\\hat{\\lambda}_{k}\\right) \\sum\\limits_{t \\T_{k}} y_{t}  - 2 \\sum\\limits_{t \\T_{k}} y_{t} \\log\\left(r_{t}\\right) + 2 \\sum\\limits_{t \\T_{k}} \\log\\left( y_{t}! \\right) + \\beta anomaly accepted whenever CA(yt‚ààTk|ŒªÃÇk,rt‚ààTk)‚àíCB(yt‚ààTk|rt‚ààTk)=2‚àët‚ààTkyt‚àí2log(ŒªÃÇk)‚àët‚ààTkyt+Œ≤‚àí2‚àët‚ààTkrt<0 C_{}\\left(y_{t \\T_{k}} \\left| \\hat{\\lambda}_k,r_{t \\T_{k}}\\right.\\right) -  C_{B}\\left(y_{t \\T_{k}} \\left| r_{t \\T_{k}}\\right.\\right) =  2 \\sum\\limits_{t \\T_{k}} y_{t} - 2 \\log\\left(\\hat{\\lambda}_{k}\\right) \\sum\\limits_{t \\T_{k}} y_{t}  + \\beta - 2 \\sum\\limits_{t \\T_{k}} r_{t} <0 Rearranging expression terms ‚àët‚ààTkrt\\sum\\limits_{t \\T_{k}} r_{t}, expected number counts period anomalous gives CA(yt‚ààTk|ŒªÃÇk,rt‚ààTk)‚àíCB(yt‚ààTk|rt‚ààTk)=Œ≤‚àí2(1‚àíŒªÃÇk+ŒªÃÇklog(ŒªÃÇk))‚àët‚ààTkrt C_{}\\left(y_{t \\T_{k}} \\left| \\hat{\\lambda}_k,r_{t \\T_{k}}\\right.\\right) -  C_{B}\\left(y_{t \\T_{k}} \\left| r_{t \\T_{k}}\\right.\\right) =  \\beta - 2 \\left( 1 - \\hat{\\lambda}_{k} + \\hat{\\lambda}_{k}\\log\\left(\\hat{\\lambda}_{k}\\right)\\right) \\sum\\limits_{t \\T_{k}} r_{t} form suggests selection Œ≤\\beta based minimum change ŒªÃÇk\\hat{\\lambda}_{k} away 1 causing least certain change expected number counts. figure show Œ≥=2(1‚àíŒªÃÇk+ŒªÃÇklog(ŒªÃÇk))\\gamma = 2 \\left( 1 - \\hat{\\lambda}_{k} + \\hat{\\lambda}_{k}\\log\\left(\\hat{\\lambda}_{k}\\right)\\right). Using select gamma=0.01gamma=0.01 ensure change lambda 10%, combined desire detect changes 50 units result Œ≤=0.5\\beta = 0.5","code":""},{"path":"https://waternumbers.github.io/anomalous/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Smith. Author, maintainer.","code":""},{"path":"https://waternumbers.github.io/anomalous/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith P (2024). anomalous: Anomaly Detection using CAPA PELT Algorithms. R package version 0.0.4.2, https://waternumbers.github.io/anomalous/, https://github.com/waternumbers/anomalous.","code":"@Manual{,   title = {anomalous: Anomaly Detection using the CAPA and PELT Algorithms},   author = {Paul Smith},   year = {2024},   note = {R package version 0.0.4.2, https://waternumbers.github.io/anomalous/},   url = {https://github.com/waternumbers/anomalous}, }"},{"path":"https://waternumbers.github.io/anomalous/index.html","id":"anomalous","dir":"","previous_headings":"","what":"Anomaly Detection using the CAPA and PELT Algorithms","title":"Anomaly Detection using the CAPA and PELT Algorithms","text":"native R implementation PELT CAPA algorithms changepoint anomaly detection. implementation build around S3 class anomalous_partition storing inforamtion changepoints anomalies R6 classes cost functions relating fitting different distributions data. CAPA PELT implementations make use methods anomalous_partition class. allows replacement current anomalous_partition class new class similarly names methods. anomalous_partition class makes us cost classes via named methods, allowing generalisation extension cost functions.","code":""},{"path":"https://waternumbers.github.io/anomalous/index.html","id":"using-the-code","dir":"","previous_headings":"","what":"Using the code","title":"Anomaly Detection using the CAPA and PELT Algorithms","text":"package available CRAN. latest development version can installed git repository within R using devtools package: Prebuild packages development version available r-universe","code":"devtools::install_github(\"waternumbers/anomalous\")"},{"path":"https://waternumbers.github.io/anomalous/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Anomaly Detection using the CAPA and PELT Algorithms","text":"Development code supported UK Research Innovation (UKRI) Engineering Physical Sciences Research Council (EPSRC) project ‚ÄúReducing End Use Energy Demand Commercial Settings Digital Innovation‚Äù (EP/T025964/1).","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/Lai2005fig4.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized glioblastoma profile for an excerpt of chromosome 7, the EGFR locus. ‚Äî Lai2005fig4","title":"Normalized glioblastoma profile for an excerpt of chromosome 7, the EGFR locus. ‚Äî Lai2005fig4","text":"dataset taken Lai W, Johnson MJ, Kucherlapati R, Park PJ, Bioinformatics , 2005.  paper states original source data Bredel et al. (2005).  data excerpt chromosome 7 GBM29 40 65 Mb. version data copy changepoint package.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/Lai2005fig4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized glioblastoma profile for an excerpt of chromosome 7, the EGFR locus. ‚Äî Lai2005fig4","text":"","code":"data(Lai2005fig4)"},{"path":"https://waternumbers.github.io/anomalous/reference/Lai2005fig4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Normalized glioblastoma profile for an excerpt of chromosome 7, the EGFR locus. ‚Äî Lai2005fig4","text":"matrix dimensions 193 x 5.  columns Spot, CH, POS.start, POS.end, GBM31.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/Lai2005fig4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Normalized glioblastoma profile for an excerpt of chromosome 7, the EGFR locus. ‚Äî Lai2005fig4","text":"http://compbio.med.harvard.edu/Supplements/Bioinformatics05b/Profiles/Chrom_7_from40_to65Mb_GBM29.xls","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/anomalous-package.html","id":null,"dir":"Reference","previous_headings":"","what":"anomalous: Anomaly Detection using the CAPA and PELT Algorithms ‚Äî anomalous-package","title":"anomalous: Anomaly Detection using the CAPA and PELT Algorithms ‚Äî anomalous-package","text":"Implimentations univariate CAPA doi:10.1002/sam.11586  PELT doi:10.1080/01621459.2012.737745  algotithms along various cost functions different distributions models. modular design, using R6 classes, favour ease extension (example user written cost functions) performance implimentations (e.g. doi:10.32614/CRAN.package.changepoint , doi:10.32614/CRAN.package.anomaly ).","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/anomalous-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"anomalous: Anomaly Detection using the CAPA and PELT Algorithms ‚Äî anomalous-package","text":"Maintainer: Paul Smith paul@waternumbers.co.uk (ORCID)","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/capa.html","id":null,"dir":"Reference","previous_headings":"","what":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","text":"R implimentation segmented search algorithmpelt algorithm","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/capa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","text":"","code":"capa(part, fCost, prune = TRUE, verbose = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/capa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","text":"part starting partition fCost cost function prune logical, pruning used verbose logical, print progress","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/capa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","text":"optimal partition","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/capa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî capa","text":"Basic R implimentation pelt - efficent","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for the categorical distribution ‚Äî categoricalCost","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Cost functions multinomial distribution","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Collective anomalies represented chnages expected proportions. Time varying expected proportions currently handled.","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"categoricalCost$length() categoricalCost$new() categoricalCost$baseCost() categoricalCost$pointCost() categoricalCost$collectiveCost() categoricalCost$param() categoricalCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$new(x, m = rep(1/ncol(x), ncol(x)))"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"x integer matrix observations 0,1 m numeric vector expected proportions ## need check row sums 1 - possibly just use multinomial??","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"categoricalCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/categoricalCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for the categorical distribution ‚Äî categoricalCost","text":"","code":"set.seed(0) m <- c(1:4)/sum(1:4) X <- t(rmultinom(100, 1, m))  p <- categoricalCost$new(X,m) p$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] 14.91881 p$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] 0 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation p$collectiveCost(90,95,57,3) #> [1] 69.13685"},{"path":"https://waternumbers.github.io/anomalous/reference/coef.anomalous_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","title":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","text":"Generates coefficents anomalous periods object class amomalous_partition","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/coef.anomalous_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","text":"","code":"# S3 method for class 'anomalous_partition' coef(object, ...)"},{"path":"https://waternumbers.github.io/anomalous/reference/coef.anomalous_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","text":"object anomalous_partition ... optional parameters see details","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/coef.anomalous_partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","text":"matrix parameters whose rows correspond rows summary output","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/coef.anomalous_partition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefficent method for an amomalous_partition ‚Äî coef.anomalous_partition","text":"Generates coefficents anomalous periods. Required input cost cost function. Optional input t time partitioning solution use.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/collective_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for extracting collective anomalies ‚Äî collective_anomalies","title":"Method for extracting collective anomalies ‚Äî collective_anomalies","text":"Extracts collective anomaly summaries object","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/collective_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for extracting collective anomalies ‚Äî collective_anomalies","text":"","code":"collective_anomalies(p, t)"},{"path":"https://waternumbers.github.io/anomalous/reference/collective_anomalies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for extracting collective anomalies ‚Äî collective_anomalies","text":"p object, partition, extract point anomalies t end time partition based","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/crops.html","id":null,"dir":"Reference","previous_headings":"","what":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","title":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","text":"implimentation CROPS algorithm 1D","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/crops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","text":"","code":"crops(   betaMin,   betaMax,   fCost,   alg = pelt,   betaP = Inf,   min_length = 2,   prune = TRUE,   verbose = FALSE,   maxIter = 100 )"},{"path":"https://waternumbers.github.io/anomalous/reference/crops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","text":"betaMin lower bound penalisation window betaMax upper bound penalisation window fCost cost function alg algorithm either capa pelt betaP penalty adding point anomaly - use capa min_length minimum number values collective anomaly prune logical, pruning used verbose logical, print progress maxIter maximum number algorithm evaluations perform","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/crops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","text":"something...","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/crops.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An implimentation of the CROPS algorithm in 1D ‚Äî crops","text":"work cost functions beta additive!!!","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Cost functions differening types univariate gaussion anomalies","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"x numeric vector matrix observations (see details) m numeric vector mean values s numeric vector standard deviation values point_type representation point anomalies either change mean variance start period b end period pen penalty cost len minimum number obseervations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Collective anomalies represented either changes mean (gaussMean), variance (gaussVar) mean variance (gaussMeanvar). See vignettes details. x matrix values row treated IID replicate observations.","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"gaussCost$length() gaussCost$new() gaussCost$baseCost() gaussCost$pointCost() gaussCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussCost$new(x, m = 0, s = 1, point_type = c(\"var\", \"mean\"))"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"x numeric vector observations m numeric vector mean values s numeric vector standard deviation values point_type representation point anomalies either change mean variance","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost -> gaussMean","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost$baseCost() anomalous::gaussCost$initialize() anomalous::gaussCost$length() anomalous::gaussCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"gaussMean$collectiveCost() gaussMean$param() gaussMean$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMean$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMean$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMean$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"super-class-1","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost -> gaussVar","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"methods-2","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost$baseCost() anomalous::gaussCost$initialize() anomalous::gaussCost$length() anomalous::gaussCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"public-methods-2","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"gaussVar$collectiveCost() gaussVar$param() gaussVar$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-collectivecost--1","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussVar$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-param--1","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussVar$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-clone--2","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussVar$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"super-class-2","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost -> gaussMeanVar","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"methods-3","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"anomalous::gaussCost$baseCost() anomalous::gaussCost$initialize() anomalous::gaussCost$length() anomalous::gaussCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"public-methods-3","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"gaussMeanVar$collectiveCost() gaussMeanVar$param() gaussMeanVar$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-collectivecost--2","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMeanVar$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-param--2","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMeanVar$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"method-clone--3","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"gaussMeanVar$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussCost","text":"","code":"set.seed(0) m <- runif(100) s <- pmax(1e-4,runif(100)) x <- rnorm(100,m,s) ## example data  gM <- gaussMean$new(x,m,s) ## anomalies are changes in mean gM$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] 9.158737 gM$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] 3.181151 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation gM$collectiveCost(90,95,57,3) #> [1] 66.1552  gV <- gaussVar$new(x,m,s) ## anomalies are changes in variance gV$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] 9.158737 gV$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] 3.181151 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation gV$collectiveCost(90,95,57,3) #> [1] 66.11441  gMV <- gaussMeanVar$new(x,m,s) ## anomalies are changes in mean and variance gMV$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] 9.158737 gMV$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] 3.181151 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation gMV$collectiveCost(90,95,57,3) #> [1] 66.11126"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Cost functions differening types univariate gaussion anomalies","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Collective anomalies represented either changes parameters describing mean (gaussRegMean), variance (gaussRegVar) mean variance (gaussRegMeanVar). Changes variance represented scaling parameter, changes covariance. See vignettes details. element input x list containing vector observations y corresponding design matrix X. Optionally can also include vector parameter m covariance matrix S.","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"gaussRegCost$length() gaussRegCost$new() gaussRegCost$baseCost() gaussRegCost$pointCost() gaussRegCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegCost$new(x, non_neg = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"x list regressions (see details) non_neg non-negative paraemter solutions considered","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost -> gaussRegMean","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost$baseCost() anomalous::gaussRegCost$initialize() anomalous::gaussRegCost$length() anomalous::gaussRegCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"gaussRegMean$collectiveCost() gaussRegMean$param() gaussRegMean$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMean$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMean$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMean$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"super-class-1","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost -> gaussRegVar","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"methods-2","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost$baseCost() anomalous::gaussRegCost$initialize() anomalous::gaussRegCost$length() anomalous::gaussRegCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"public-methods-2","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"gaussRegVar$collectiveCost() gaussRegVar$param() gaussRegVar$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-collectivecost--1","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegVar$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-param--1","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegVar$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-clone--2","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegVar$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"super-class-2","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost -> gaussRegMeanVar","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"methods-3","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"anomalous::gaussRegCost$baseCost() anomalous::gaussRegCost$initialize() anomalous::gaussRegCost$length() anomalous::gaussRegCost$pointCost()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"public-methods-3","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"gaussRegMeanVar$collectiveCost() gaussRegMeanVar$param() gaussRegMeanVar$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-collectivecost--2","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMeanVar$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-param--2","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMeanVar$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"method-clone--3","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"gaussRegMeanVar$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/gaussRegCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for Univariate Gaussian Cost Functions ‚Äî gaussRegCost","text":"","code":"## simple test set.seed(10) x <- list() n <- 120 for(ii in 1:48){          if(ii < 10){ theta = c(1,0); sigma <- 0.1 }     if(ii >= 10 & ii <12){ theta <- c(10,0); sigma <- 2}     if(ii >= 12 & ii < 44){ theta <- c(5,1); sigma <- 2}     if(ii >= 44 ){ theta <- c(1,0); sigma <- 0.1}          X <- cbind(rep(1,n),runif(n,ii-1,ii))     y <- rnorm(n, X%*%theta, sigma)     x[[ii]] <- list(y=y,X=X) }  fCost <- gaussRegMeanVar$new(x) p <- partition(4*log(sum(sapply(y,length))),NA,2) res <- pelt(p,fCost)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for LAD Cost Functions ‚Äî ladCost","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Cost functions Least Absolution Deviation given quantile","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"niaive slow implimentation","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"ladCost$length() ladCost$new() ladCost$baseCost() ladCost$pointCost() ladCost$collectiveCost() ladCost$param() ladCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$new(x, m = 0, tau = 0.5)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"x numeric vector observations m expected value x tau quantile","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$pointCost(a, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"ladCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/ladCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for LAD Cost Functions ‚Äî ladCost","text":"","code":"set.seed(0) m <- runif(100) x <- rnorm(100,m)  p <- ladCost$new(x,m,0.5) p$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] -12.48888 p$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] -2.772589 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation p$collectiveCost(90,95,57,3) #> [1] 43.86362"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for local regression Cost Functions ‚Äî localRegCost","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"experimental - use","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"localRegCost$length() localRegCost$new() localRegCost$baseCost() localRegCost$pointCost() localRegCost$collectiveCost() localRegCost$param() localRegCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$new(x, family = c(\"gaussian\", \"symmetric\"))"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"x observations gauss_reg family fitting","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"","code":"localRegCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/localRegCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for local regression Cost Functions ‚Äî localRegCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/machine-temperature-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Machine temperature data. ‚Äî machinetemp","title":"Machine temperature data. ‚Äî machinetemp","text":"Temperature sensor data internal component large, industrial machine. data contains three known anomalies. first anomaly planned shutdown machine. second anomaly difficult detect directly led third anomaly, catastrophic failure machine. data consists 22695 observations machine temperature recorded 5 minute intervals along date time measurement. data obtained Numenta Anomaly Benchmark, can found https://github.com/numenta/NAB.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/machine-temperature-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Machine temperature data. ‚Äî machinetemp","text":"","code":"data(machinetemp)"},{"path":"https://waternumbers.github.io/anomalous/reference/machine-temperature-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Machine temperature data. ‚Äî machinetemp","text":"dataframe 22695 rows 2 columns. first column contains date time temperature measurement. second column contains machine temperature.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for the multinomial distribution ‚Äî multinomialCost","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Cost functions multinomial distribution","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Collective anomalies represented chnages expected proportions. Time varying expected proportions currently handled.","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"multinomialCost$length() multinomialCost$new() multinomialCost$baseCost() multinomialCost$pointCost() multinomialCost$collectiveCost() multinomialCost$param() multinomialCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$new(x, m = rep(1/ncol(x), ncol(x)))"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"x integer matrix observations m numeric vector expected proportions","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"multinomialCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/multinomialCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for the multinomial distribution ‚Äî multinomialCost","text":"","code":"set.seed(0) m <- c(1:4)/sum(1:4) X <- t(rmultinom(100, 144, m))  p <- multinomialCost$new(X,m) p$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #> [1] 105.7273 p$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #> [1] 14.37387 ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation p$collectiveCost(90,95,57,3) #> [1] 161.7761"},{"path":"https://waternumbers.github.io/anomalous/reference/param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the parameters for a partitioning result ‚Äî param","title":"Get the parameters for a partitioning result ‚Äî param","text":"Get parameters partitioning result","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the parameters for a partitioning result ‚Äî param","text":"","code":"param(res, fCost)"},{"path":"https://waternumbers.github.io/anomalous/reference/param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the parameters for a partitioning result ‚Äî param","text":"res result partitioning algorithm fCost cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the parameters for a partitioning result ‚Äî param","text":"list parameters","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the parameters for a partitioning result ‚Äî param","text":"yet implimented cost functions","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Partion record for the data ‚Äî partition","title":"Partion record for the data ‚Äî partition","text":"partition records seperation data generated pelt capa methods","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partion record for the data ‚Äî partition","text":"","code":"partition(beta, betaP, min_length)"},{"path":"https://waternumbers.github.io/anomalous/reference/partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partion record for the data ‚Äî partition","text":"beta penalty new collective anomaly betaP penalty new point anomaly min_length shortest length collective anomaly","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/partition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partion record for the data ‚Äî partition","text":"","code":"p <- partition(3,4,2)"},{"path":"https://waternumbers.github.io/anomalous/reference/pelt.html","id":null,"dir":"Reference","previous_headings":"","what":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","text":"R implimentation segmented search algorithmpelt algorithm","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/pelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","text":"","code":"pelt(part, fCost, prune = TRUE, verbose = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/pelt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","text":"part starting partition fCost cost function prune logical, pruning used verbose logical, print progress","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/pelt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","text":"optimal partition","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/pelt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An R implimentation of the segmented search algorithmpelt algorithm ‚Äî pelt","text":"Basic R implimentation pelt - efficent","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/plot.anomalous_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","title":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","text":"Provides summary plot object class amomalous_partition","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/plot.anomalous_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","text":"","code":"# S3 method for class 'anomalous_partition' plot(x, ...)"},{"path":"https://waternumbers.github.io/anomalous/reference/plot.anomalous_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","text":"x anomalous_partition ... optional parameters see details","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/plot.anomalous_partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","text":"Produces plot","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/plot.anomalous_partition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for an amomalous_partition ‚Äî plot.anomalous_partition","text":"providing t time results prodiced though analysis stopped . optional inputs xx yy allow data displayed shaded anomaly/changepoint areas. data provided xx = 1:t yy cost periods timestep .","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/point_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for extracting point anomalies ‚Äî point_anomalies","title":"Method for extracting point anomalies ‚Äî point_anomalies","text":"Extracts point anomaly summaries object","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/point_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for extracting point anomalies ‚Äî point_anomalies","text":"","code":"point_anomalies(p, t)"},{"path":"https://waternumbers.github.io/anomalous/reference/point_anomalies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for extracting point anomalies ‚Äî point_anomalies","text":"p object, partition, extract point anomalies t end time partition based","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Cost functions univariate Poission distribution","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Collective anomalies represented multiplicative changes rate","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"poisCost$length() poisCost$new() poisCost$baseCost() poisCost$pointCost() poisCost$collectiveCost() poisCost$param() poisCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$new(x, rate = 1)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"x numeric vector observations rate numeric vector rate parameters","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Compute anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"poisCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/poisCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for Univariate Poisson Cost Functions ‚Äî poisCost","text":"","code":"set.seed(0) r <- 8 + runif(100)*2 x <- rpois(100,lambda = r)  p <- poisCost$new(x,r) p$baseCost(90,95) ## cost of non-anomalous distribution for x[90:95] #>     rate  #> 29.90849  p$pointCost(90,0) ## point anomaly cost for x[90] with 0 penalty #>        x  #> 4.415644  ## collective anomaly cost for x[90:95] with penalty of 57 and at least 3 observation p$collectiveCost(90,95,57,3)  #>     rate  #> 86.33279"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for rank based anomalies ‚Äî rankCost","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"developmental - use","code":""},{"path":[]},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"rankCost$length() rankCost$new() rankCost$baseCost() rankCost$pointCost() rankCost$collectiveCost() rankCost$param() rankCost$clone()","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Get length time series","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$length()"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Initialise cost function","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$new(x, m = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"x numeric matrix observations m numeric vector matrix mean values","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-basecost-","dir":"Reference","previous_headings":"","what":"Method baseCost()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$baseCost(a, b, pen = 0)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"start period b end period pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-pointcost-","dir":"Reference","previous_headings":"","what":"Method pointCost()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Compute point anomaly cost time step","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$pointCost(b, pen)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"b time step pen penalty cost","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-collectivecost-","dir":"Reference","previous_headings":"","what":"Method collectiveCost()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Compute non-anomalous cost segment","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$collectiveCost(a, b, pen, len)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"start period b end period pen penalty cost len minimum number observations","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-param-","dir":"Reference","previous_headings":"","what":"Method param()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"Compute parameters segment anomalous","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$param(a, b)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"start period b end period","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"objects class cloneable method.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"rankCost$clone(deep = FALSE)"},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"deep Whether make deep clone.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/rankCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for rank based anomalies ‚Äî rankCost","text":"","code":"set.seed(0) m <- runif(100) s <- pmax(1e-4,runif(100)) x <- rnorm(100,m,s) ## example data"},{"path":"https://waternumbers.github.io/anomalous/reference/simulated-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data. ‚Äî sim.data","title":"Simulated data. ‚Äî sim.data","text":"simulated data set use examples vignettes. data consists 500 observations 20 variates drawn standard normal distribution. Within data three multivariate anomalies length 15 located t=100, t=200, t=300 mean changes 0 2. anomalies affect variates 1 8, 1 12 1 16 respectively.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/simulated-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data. ‚Äî sim.data","text":"","code":"data(simulated)"},{"path":"https://waternumbers.github.io/anomalous/reference/simulated-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data. ‚Äî sim.data","text":"matrix 500 rows 40 columns.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/summary.anomalous_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","title":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","text":"Provides summary object class amomalous_partition","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/summary.anomalous_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","text":"","code":"# S3 method for class 'anomalous_partition' summary(object, ...)"},{"path":"https://waternumbers.github.io/anomalous/reference/summary.anomalous_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","text":"object anomalous_partition ... optional parameters see details","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/summary.anomalous_partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","text":"data.frame summarising partitions","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/summary.anomalous_partition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summmary method for an amomalous_partition ‚Äî summary.anomalous_partition","text":"providing t time results prodiced though analysis stopped .","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Ireland wind data, 1961-1978 ‚Äî wind","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"Daily average wind speeds 1961-1978 12 synoptic meteorological stations Republic Ireland (Haslett raftery 1989). Wind speeds knots (1 knot = 0.5418 m/s), stations order given Fig.4 Haslett Raftery (1989, see ) data copy contained within gstat package","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"","code":"data(wind)"},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"data.frame wind contains following columns: year year, minus 1900 month month (number) year day day RPT average wind speed knots station RPT VAL average wind speed knots station VAL ROS average wind speed knots station ROS KIL average wind speed knots station KIL SHA average wind speed knots station SHA BIR average wind speed knots station BIR DUB average wind speed knots station DUB CLA average wind speed knots station CLA MUL average wind speed knots station MUL CLO average wind speed knots station CLO BEL average wind speed knots station BEL MAL average wind speed knots station MAL data.frame wind.loc contains following columns: Station Station name Code Station code Latitude Latitude, DMS, see examples Longitude Longitude, DMS, see examples MeanWind mean wind station, metres per second","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"Adrian Raftery; imported R Edzer Pebesma","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"data analyzed detail following article: Haslett, J. Raftery, . E. (1989). Space-time Modelling    Long-memory Dependence: Assessing Ireland's Wind Power Resource    (Discussion). Applied Statistics 38, 1-50. many later papers space-time analysis, example:    Tilmann Gneiting, Marc G. Genton, Peter Guttorp: Geostatistical    Space-Time Models, Stationarity, Separability Full symmetry.    Ch. 4 : B. Finkenstaedt, L. Held, V. Isham, Statistical Methods    Spatio-Temporal Systems.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"data set comes following message: ‚Äúaware dataset 532494 bytes long (thats half Megabyte).  Please sure want data request .‚Äù data obtained Oct 12, 2008, : http://www.stat.washington.edu/raftery/software.html data also available statlib. Locations 11 stations (ROS, Rosslare thrown fits poorly spatial correlations stations) obtained : http://www.stat.washington.edu/research/reports/2005/tr475.pdf Roslare lat/lon obtained google maps, location Roslare. mean wind value Roslare comes Fig. 1 original paper. Haslett Raftery proposed use sqrt-transform stabilize variance.","code":""},{"path":"https://waternumbers.github.io/anomalous/reference/wind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ireland wind data, 1961-1978 ‚Äî wind","text":"","code":"data(wind) summary(wind) #>       year          month             day             RPT        #>  Min.   :61.0   Min.   : 1.000   Min.   : 1.00   Min.   : 0.67   #>  1st Qu.:65.0   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 8.12   #>  Median :69.5   Median : 7.000   Median :16.00   Median :11.71   #>  Mean   :69.5   Mean   : 6.523   Mean   :15.73   Mean   :12.36   #>  3rd Qu.:74.0   3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.:15.92   #>  Max.   :78.0   Max.   :12.000   Max.   :31.00   Max.   :35.80   #>       VAL             ROS             KIL              SHA        #>  Min.   : 0.21   Min.   : 1.50   Min.   : 0.000   Min.   : 0.13   #>  1st Qu.: 6.67   1st Qu.: 8.00   1st Qu.: 3.580   1st Qu.: 6.75   #>  Median :10.17   Median :10.92   Median : 5.750   Median : 9.96   #>  Mean   :10.65   Mean   :11.66   Mean   : 6.306   Mean   :10.46   #>  3rd Qu.:14.04   3rd Qu.:14.67   3rd Qu.: 8.420   3rd Qu.:13.54   #>  Max.   :33.37   Max.   :33.84   Max.   :28.460   Max.   :37.54   #>       BIR              DUB              CLA              MUL         #>  Min.   : 0.000   Min.   : 0.000   Min.   : 0.000   Min.   : 0.000   #>  1st Qu.: 4.000   1st Qu.: 6.000   1st Qu.: 5.090   1st Qu.: 5.370   #>  Median : 6.830   Median : 9.210   Median : 8.080   Median : 8.170   #>  Mean   : 7.092   Mean   : 9.797   Mean   : 8.494   Mean   : 8.496   #>  3rd Qu.: 9.670   3rd Qu.:12.960   3rd Qu.:11.420   3rd Qu.:11.210   #>  Max.   :26.160   Max.   :30.370   Max.   :31.080   Max.   :25.880   #>       CLO              BEL             MAL        #>  Min.   : 0.040   Min.   : 0.13   Min.   : 0.67   #>  1st Qu.: 5.330   1st Qu.: 8.71   1st Qu.:10.71   #>  Median : 8.290   Median :12.50   Median :15.00   #>  Mean   : 8.707   Mean   :13.12   Mean   :15.60   #>  3rd Qu.:11.630   3rd Qu.:16.88   3rd Qu.:19.83   #>  Max.   :28.210   Max.   :42.38   Max.   :42.54"}]
