## test the pelt and op algorithms with example data
## test results from the changepoint package unless stated
## computed using th BIC not the MBIC
## changepoint returns the last timestep before a change
## this function alters the anomolous output to match this indexing
fidx <- function(tmp){
    out <- tmp@collective$strt
    out <- out[-1] - 1
    return(out) 
}
set.seed(10)
x <- c(rnorm(100, 0, 1), rnorm(100, 1, 1), rnorm(100, 0, 1), rnorm(100, 0.2, 1))
pen <- c(mean=2*log(length(x)))
mu <- rep(0,length(x))
sigma <- rep(1,length(x))
expect_equal( fidx(cpOP(x,mu,sigma,"mean",pen)), c(97,192) )
expect_equal( fidx(cpPelt(x,mu,sigma,"mean",pen)), c(97,192) )

pen["mean"] <- 1.5*log(length(x))
expect_equal( fidx(cpOP(x,mu,sigma,"mean",pen)), c(97,192,273) )
expect_equal( fidx(cpPelt(x,mu,sigma,"mean",pen)), c(97,192,273) )

data("Lai2005fig4")#, package = "changepoint")
x <- Lai2005fig4[, 5]
pen <- c("mean"=2*log(length(x)))
mu <- rep(0,length(x))
sigma <- rep(1,length(x))

expect_equal( fidx(cpOP(x,mu,sigma,"mean",pen)), c(81,85,89,96,123,133) )
expect_equal( fidx(cpPelt(x,mu,sigma,"mean",pen)), c(81,85,89,96,123,133) )
## expect_equal(pelt(x,fCmn,pen), target)

data("wind") #, package = "gstat")
x <- diff(wind[, 11])
mu <- rep(0,length(x))
sigma <- rep(1,length(x))
pen <- c(var=2*log(length(x)))
expect_equal( fidx(cpPelt(x,mu,sigma,"var", pen)),
             c(3409, 3496, 5054, 5184, 5203, 5373, 5583, 5678, 5728, 6235, 6241, 6542)  ) # currently takes to long to run

## TODO add poisson

## data("discoveries", package = "datasets")
## x <- discoveries
## pen <- 2*log(length(x))
## expect_equal( fidx(op(x,poisSegment,pen)), c(24, 29,73) )
## expect_equal( fidx(pelt(x,poisSegment,pen)), c(24, 29,73) )

